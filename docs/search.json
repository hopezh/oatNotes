[
  {
    "objectID": "pages/polars/edit_df_column.html",
    "href": "pages/polars/edit_df_column.html",
    "title": "Edit DF Column",
    "section": "",
    "text": "Note\n\n\n\nUsing lambda func with map_elements(), or appl(), is much slower than using native expressions.\n\n\n\n1 add dummy dataframe\n\nimport polars as pl\nfrom datetime import datetime\n\ndf = pl.DataFrame(\n    {\n        \"integer\": [1, 2, 3],\n        \"date\": [\n            datetime(2025, 1, 1),\n            datetime(2025, 1, 2),\n            datetime(2025, 1, 3),\n        ],\n        \"float\": [4.0, 5.0, 6.0],\n        \"string\": [\"a\", \"b\", \"c\"],\n    }\n)\n\ndf\n\n\nshape: (3, 4)\n\n\n\ninteger\ndate\nfloat\nstring\n\n\ni64\ndatetime[μs]\nf64\nstr\n\n\n\n\n1\n2025-01-01 00:00:00\n4.0\n\"a\"\n\n\n2\n2025-01-02 00:00:00\n5.0\n\"b\"\n\n\n3\n2025-01-03 00:00:00\n6.0\n\"c\"\n\n\n\n\n\n\n\n\n2 use lambda func to edit a string column\n\nlambda_add_str = lambda str: str + \"+\"\n\ndf = df.with_columns(\n    pl.col('string')\n        .map_elements(lambda_add_str, return_dtype=pl.String)\n        .alias('str_plus')\n)\n\ndf\n\n/var/folders/7g/c9hb4wgd0mz62mwd00xdd4q40000gn/T/ipykernel_7891/3168615590.py:5: PolarsInefficientMapWarning:\n\n\nExpr.map_elements is significantly slower than the native expressions API.\nOnly use if you absolutely CANNOT implement your logic otherwise.\nReplace this expression...\n  - pl.col(\"string\").map_elements(lambda str: ...)\nwith this one instead:\n  + pl.col(\"string\") + '+'\n\n\n\n\n\nshape: (3, 5)\n\n\n\ninteger\ndate\nfloat\nstring\nstr_plus\n\n\ni64\ndatetime[μs]\nf64\nstr\nstr\n\n\n\n\n1\n2025-01-01 00:00:00\n4.0\n\"a\"\n\"a+\"\n\n\n2\n2025-01-02 00:00:00\n5.0\n\"b\"\n\"b+\"\n\n\n3\n2025-01-03 00:00:00\n6.0\n\"c\"\n\"c+\"\n\n\n\n\n\n\n\n# alternativly...\n\ndf = df.with_columns(\n    (pl.col('string') + \"-\").alias('str_minus')\n)\n\ndf\n\n\nshape: (3, 6)\n\n\n\ninteger\ndate\nfloat\nstring\nstr_plus\nstr_minus\n\n\ni64\ndatetime[μs]\nf64\nstr\nstr\nstr\n\n\n\n\n1\n2025-01-01 00:00:00\n4.0\n\"a\"\n\"a+\"\n\"a-\"\n\n\n2\n2025-01-02 00:00:00\n5.0\n\"b\"\n\"b+\"\n\"b-\"\n\n\n3\n2025-01-03 00:00:00\n6.0\n\"c\"\n\"c+\"\n\"c-\"\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Polars",
      "Edit DF Column"
    ]
  },
  {
    "objectID": "pages/rhino3dm/test_rhino3dm.html",
    "href": "pages/rhino3dm/test_rhino3dm.html",
    "title": "test rhino3dm",
    "section": "",
    "text": "1 Docs\n\nrhino3dm github\nrhino3dm doc\ndeveloper examples\n\nrhino3dm.py\nrhino3dm.js\n\n\n\n\n2 Install rhino3dm:\n&gt; pip install rhino3dm\n\n&gt; pip show rhino3dm\n\nName: rhino3dm\nVersion: 8.6.0\nSummary: Python library based on OpenNURBS with a RhinoCommon\n style\nHome-page: \nAuthor: Robert McNeel & Associates\nAuthor-email: steve@mcneel.com\nLicense: \nLocation: C:\\Users\\USERNAME\\.conda\\envs\\ai\\Lib\\site-packages\nRequires: \nRequired-by: compute-rhino3d\n\n\n3 Example 1\nfrom rhino3dm import *\nimport requests  # pip install requests\n\nreq = requests.get(\"https://files.mcneel.com/TEST/Rhino Logo.3dm\")\n\nmodel = File3dm.FromByteArray(req.content)\n\nfor i in range(len(model.Objects)):\n    obj = model.Objects[i]\n    geometry = obj.Geometry\n    bbox = geometry.GetBoundingBox()\n\n    print(\"model object \", i, ':', obj)\n    print(\"bbbox min & max: {}, {}\".format(bbox.Min, bbox.Max), '\\n')\n\n\n\n\n\n\n\n\nFile3dm.FromByteArray -&gt; File3dm\n\n\n\n\n\nFile3dm.FromByteArray\nRead a 3dm file from a byte array\n\nReturns: New File3dm on success, None on error.\nReturn type: File3dm\n\n\n\n\n\n\n\n\n\n\n\nFile3dm.Objects –&gt; File3dmObjectTable\n\n\n\n\n\nFile3dm.Objects\nFile3dmObjectTable: Gets access to the class associated with this file, which contains all objects.\n\n\n\n\n\n\n\n\n\n\nFile3dmObject.Geometry -&gt; rhino3dm.GeometryBase\n\n\n\n\n\nFile3dmObject.Geometry\nrhino3dm.GeometryBase: Gets the geometry that is linked with this document object.\n\n\n\n\n\n\n\n\n\n\nGeometryBase.GetBoundingBox -&gt; rhino3dm.BoundingBox\n\n\n\n\n\nGeometryBase.GetBoundingBox\nBounding box solver. Gets the world axis aligned bounding box for the geometry.\nParameters:\n\naccurate (bool) – If true, a physically accurate bounding box will be computed. If not, a bounding box estimate will be computed. For some geometry types there is no difference between the estimate and the accurate bounding box. Estimated bounding boxes can be computed much (much) faster than accurate (or “tight”) bounding boxes. Estimated bounding boxes are always similar to or larger than accurate bounding boxes.\n\nReturns:\n\nThe bounding box of the geometry in world coordinates or BoundingBox.Empty if not bounding box could be found.\n\nReturn type:\n\nrhino3dm.BoundingBox\n\n\n\n\n\n\n\n\n\n\n\nrhino3dm.BoundingBox\n\n\n\n\n\nclass rhino3dm.BoundingBox\n\nBoundingBox(minX, minY, minZ, maxX, maxY, maxZ)\nConstructs a bounding box from numeric extremes.\nParameters:\n\nminX (float) – Lower extreme for box X size.\nminY (float) – Lower extreme for box Y size.\nminZ (float) – Lower extreme for box Z size.\nmaxX (float) – Upper extreme for box X size.\nmaxY (float) – Upper extreme for box Y size.\nmaxZ (float) – Upper extreme for box Z size.\n\n\n\n\n\n\n\n\n\n\n\n4 Example 2\nfrom rhino3dm import *\n\ncenter = Point3d(1, 2, 3)\narc = Arc(center, 10, 1)\nnc = arc.ToNurbsCurve()\nstart = nc.PointAtStart\nprint('start point', type(start))\n\n\n5 Example 3\n\nimport rhino3dm\nimport random\n\nmodel = rhino3dm.File3dm()\n\nfor i in range(20):\n    pt = rhino3dm.Point3d(random.uniform(-10,10), random.uniform(-10,10), 0)\n    model.Objects.AddPoint(pt)\n    circle = rhino3dm.Circle(pt, random.uniform(1,4))\n    model.Objects.AddCircle(circle)\n    \nmodel.Write(\"./circle.3dm\", 70)\n\nTrue\n\n\n\n\n6 Example 4\n# Sample read render meshes from 3dm file\n\nimport rhino3dm\n\nmodel = rhino3dm.File3dm.Read('./data/myBox.3dm')\nprint(model)\n\nbrep = model.Objects[0].Geometry\nprint(brep)\n\nface = brep.Faces[0]\nprint(face)\n\nmesh = face.GetMesh(rhino3dm.MeshType.Any)\nprint(mesh)\n# print (len(mesh.Faces))\n\n\n7 Example 5\n# spherelines.py\n# Sample script that demonstrates how to use Rhino3dm.py\n# https://github.com/mcneel/rhino3dm\n# This sample creates a 3dm file containing a group of randomly\n# distributed lines defining an sphere.\n\nimport rhino3dm\nimport random\nimport math\nimport os\n\n# Initial parameters\ntheta_min = 0.0\ntheta_max = math.pi\nalpha_min = 0.0\nalpha_max = math.pi * 2.0\nsphere_radius = 100.0\nnum_lines = 1500\n\n# Create a center point\ncenter_pt = rhino3dm.Point3d(0.0, 0.0, 0.0)\n\n# Create a File3dm object\nmodel = rhino3dm.File3dm()\n\nfor i in range(num_lines):\n    # Calculate random line end point\n    random.seed(i * 100)\n    theta = random.uniform(theta_min, theta_max)\n    alpha = random.uniform(alpha_min, alpha_max)\n    x = sphere_radius * math.sin(theta) * math.cos(alpha)\n    y = sphere_radius * math.sin(theta) * math.sin(alpha)\n    z = sphere_radius * math.cos(theta)\n    end_pt = rhino3dm.Point3d(x, y, z)\n    # Create line curve\n    line_curve = rhino3dm.LineCurve(center_pt, end_pt)\n    # Add to model\n    model.Objects.AddCurve(line_curve)\n\n# Full path to 3dm file to save\ndesktop = os.path.join(os.path.join(os.environ['USERPROFILE']), 'Desktop') \nfilename = 'spherelines.3dm'\n# path = os.path.join(desktop, filename)\npath = './spherelines.3dm'\n\n# Write model to disk\nmodel.Write(path, 6)\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "rhino3dm",
      "test rhino3dm"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_01.html",
    "href": "pages/rhino3dm/rhino3dm_01.html",
    "title": "rhino3dm exercise 01",
    "section": "",
    "text": "The demo file: oat_model.3dm\n\n\n\n\nimport rhino3dm\n\n1model = rhino3dm.File3dm.Read('./data/oat_model.3dm')\nprint('model object: ', model)\n\n\n1\n\nread .3dm file as File3dm object\n\n\n\n\nmodel object:  &lt;rhino3dm._rhino3dm.File3dm object at 0x10dc8d8b0&gt;\n\n\n\n\n\n\n\n\n\n\nFile3dm.Read()\n\n\n\n\n\nmethod rhino3dm.File3dm.Read()\n\nReads a 3dm file from the specified path.\n\nParameters:\n\npath (str) – The file to read.\n\nReturns:\n\nnew File3dm on success, None on error.\n\nReturn type:\n\nFile3dm\n\n\n\n\n\n\n\n\n2layer_table = model.Layers\nprint('layer table: ', layer_table, '\\n')\n\n3for idx, layer in enumerate(iter(layer_table)):\n    print('layer ', idx, ' Object  : ', layer)\n    print('      ', idx, ' Id      : ', layer.Id)\n    print('      ', idx, ' Index   : ', layer.Index)\n    print('      ', idx, ' Name    : ', layer.Name)\n    print('      ', idx, ' Fullpath: ', layer.FullPath)\n\n\n2\n\nget the LayerTable object\n\n3\n\niterate LayerTable to get each Layer and its attributes\n\n\n\n\nlayer table:  &lt;rhino3dm._rhino3dm.File3dmLayerTable object at 0x10e3bbbf0&gt; \n\nlayer  0  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x1058eb6f0&gt;\n       0  Id      :  212960d6-ad46-439d-8516-772ce85fde03\n       0  Index   :  0\n       0  Name    :  Default\n       0  Fullpath:  Default\nlayer  1  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10e5d7730&gt;\n       1  Id      :  430ce6c7-13d8-40d9-ae38-08e0e7d0f1df\n       1  Index   :  1\n       1  Name    :  layer_1\n       1  Fullpath:  layer_1\nlayer  2  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10e5d6e30&gt;\n       2  Id      :  8e04c4aa-0bcb-4331-9ac1-79ed7bacc9f1\n       2  Index   :  2\n       2  Name    :  b_1\n       2  Fullpath:  layer_1::b_1\nlayer  3  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10e5d7970&gt;\n       3  Id      :  906c125d-ea30-483a-bf45-6fc769473e09\n       3  Index   :  3\n       3  Name    :  s_1\n       3  Fullpath:  layer_1::s_1\nlayer  4  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10e5d7eb0&gt;\n       4  Id      :  1d1e5147-f5b7-4fa1-82ea-3ece64f5994c\n       4  Index   :  4\n       4  Name    :  layer_2\n       4  Fullpath:  layer_2\n\n\n\n\n\n\n\n\n\n\nFile3dm.Layers\n\n\n\n\n\nattrib rhino3dm.File3dm.Layer\n\nIList: Layers in this file.\n\nReturns:\n\nFile3dmLayerTable\n\n\n\n\n\n\n\n\n\n\nFile3dmLayerTable\n\n\n\n\n\nclass rhino3dm.File3dmLayerTable\n\nEach item is a rhino3dm.Layer object\n\nMethods:\n\n__getitem__()\n__iter__()\n__len__()\n…\n\n\n\n\n\n\n\n\n\n\nLayer\n\n\n\n\n\nclass rhino3dm.Layer\n\nAttributes:\n\nColor\nFullPath\nId\nIndex\nLocked\nName\nParentLayerId\nVisible\n…\n\n\n\n\n\n\n\n\n4object_table = model.Objects\nprint('object table: ', object_table, '\\n')\n\n5for idx, obj in enumerate(iter(object_table)):\n    print('object ', idx, ' Object                : ', obj)\n    print('       ', idx, ' Geometry              : ', obj.Geometry)\n    print('       ', idx, ' Attributes            : ', obj.Attributes)\n    print('       ', idx, ' Attributes.Id         : ', obj.Attributes.Id)\n    print('       ', idx, ' Attributes.Name       : ', obj.Attributes.Name)\n    print('       ', idx, ' Attributes.LayerIndex : ', obj.Attributes.LayerIndex)\n    print('       ', idx, ' Attributes.ObjectColor: ', obj.Attributes.ObjectColor)\n    print('       ', idx, ' Attributes.Visible    : ', obj.Attributes.Visible)\n    print()\n\n\n4\n\nget ObjectTable in the model\n\n5\n\niterate ObjectTable to get each Object and its attributes\n\n\n\n\nobject table:  &lt;rhino3dm._rhino3dm.File3dmObjectTable object at 0x10e5d4730&gt; \n\nobject  0  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5aff70&gt;\n        0  Geometry              :  &lt;rhino3dm._rhino3dm.Extrusion object at 0x10e5c1c30&gt;\n        0  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10e5c1c30&gt;\n        0  Attributes.Id         :  fc49c0ee-7bd9-4097-961d-3925257a4738\n        0  Attributes.Name       :  solid_1\n        0  Attributes.LayerIndex :  3\n        0  Attributes.ObjectColor:  (255, 255, 0, 255)\n        0  Attributes.Visible    :  True\n\nobject  1  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x1058d76f0&gt;\n        1  Geometry              :  &lt;rhino3dm._rhino3dm.Brep object at 0x10e5aff70&gt;\n        1  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10e5aff70&gt;\n        1  Attributes.Id         :  478a0a94-ad34-41cf-b917-b6b0050dad8f\n        1  Attributes.Name       :  polysurf_2\n        1  Attributes.LayerIndex :  2\n        1  Attributes.ObjectColor:  (255, 127, 0, 255)\n        1  Attributes.Visible    :  True\n\nobject  2  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5e5570&gt;\n        2  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x1058d76f0&gt;\n        2  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x1058d76f0&gt;\n        2  Attributes.Id         :  9afb6b4b-986d-47e6-8d2d-89c6d5448117\n        2  Attributes.Name       :  curve_1\n        2  Attributes.LayerIndex :  0\n        2  Attributes.ObjectColor:  (0, 0, 0, 255)\n        2  Attributes.Visible    :  True\n\nobject  3  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5e60b0&gt;\n        3  Geometry              :  &lt;rhino3dm._rhino3dm.Mesh object at 0x1058d76f0&gt;\n        3  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x1058d76f0&gt;\n        3  Attributes.Id         :  c85d4579-e3df-492c-a4e4-dc9626c19397\n        3  Attributes.Name       :  ball_1\n        3  Attributes.LayerIndex :  4\n        3  Attributes.ObjectColor:  (0, 0, 255, 255)\n        3  Attributes.Visible    :  True\n\nobject  4  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5e58f0&gt;\n        4  Geometry              :  &lt;rhino3dm._rhino3dm.Brep object at 0x1058d76f0&gt;\n        4  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x1058d76f0&gt;\n        4  Attributes.Id         :  19067883-7bbc-4871-91bb-ad640c96bb46\n        4  Attributes.Name       :  polysurf_1\n        4  Attributes.LayerIndex :  2\n        4  Attributes.ObjectColor:  (255, 0, 0, 255)\n        4  Attributes.Visible    :  True\n\n\n\n\n\n\n\n\n\n\n\nFile3dm.Objects\n\n\n\n\n\nattrib rhino3dm.File3dm.Objects\n\nReturns a File3dmObjectTable: Gets access to the class associated with this file, which contains all objects.\n\n\n\n\n\n\n\n\n\nFile3dmObjectTable\n\n\n\n\n\nclass rhino3dm.File3dmObjectTable\n\nEach item is a rhino3dm.Object object\n\nMethods:\n\n__getitem__()\n__iter__()\n__len__()\n…\n\n\n\n\n\n\n\n\n\n\nFile3dmObject\n\n\n\n\n\nclass rhino3dm.File3dmObject\n\nAttribs:\n\nAttributes\n\nObjectAttributes: Gets the attributes that are linked with this document object.\n\nGeometry\n\nrhino3dm.GeometryBase: Gets the geometry that is linked with this document object.\n\n\n\n\n\n\n\n\n\n\n\nObjectAttributes\n\n\n\n\n\nclass rhino3dm.ObjectAttributes\n\nAttribs:\n\nId\nLayerIndex\nMaterialIndex\nName\nObjectColor\nVisible\n…\n\n\n\n\n\n\n\n\nfor idx, obj in enumerate(iter(object_table)):\n    print('object ', idx, ' Object                       : ', obj)\n    print('       ', idx, ' Geometry                     : ', obj.Geometry)\n    print('       ', idx, ' Geometry.ObjectType          : ', obj.Geometry.ObjectType)\n    print('       ', idx, ' Geometry.BoundingBox()       : ', obj.Geometry.GetBoundingBox())\n    print('       ', idx, ' Geometry.BoundingBox().Min   : ', obj.Geometry.GetBoundingBox().Min)\n    print('       ', idx, ' Geometry.BoundingBox().Min.X : ', obj.Geometry.GetBoundingBox().Min.X)\n    print('')\n\n    # if isinstance(obj.Geometry, rhino3dm.Curve):\n    if isinstance(obj.Geometry, rhino3dm.PolylineCurve):\n        print('           curve Object       :', obj)\n        print('           curve Geometry     :', obj.Geometry)\n        print('           curve IsClosed     :', obj.Geometry.IsClosed)\n        print('           curve IsPlanar     :', obj.Geometry.IsPlanar())\n        print('           curve IsPolyline   :', obj.Geometry.IsPolyline())\n        print()\n\n        print('           curve PointCount   :', obj.Geometry.PointCount)\n        \n        for i in range(obj.Geometry.PointCount):\n            # print('           curve pt ', i, ' : ', obj.Geometry.ToPolyline().PointAt(i))\n            print('           curve pt ', i, ' : ', obj.Geometry.Point(i))\n\n        print()\n\n        print('           curve SegmentCount :', obj.Geometry.ToPolyline().SegmentCount)\n\n        for i in range(obj.Geometry.ToPolyline().SegmentCount):\n            print('           segement ', i, ' : ', obj.Geometry.ToPolyline().SegmentAt(i))\n\n        print()\n\nobject  0  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e608f70&gt;\n        0  Geometry                     :  &lt;rhino3dm._rhino3dm.Extrusion object at 0x10e5e58f0&gt;\n        0  Geometry.ObjectType          :  ObjectType.Extrusion\n        0  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x10e5a3830&gt;\n        0  Geometry.BoundingBox().Min   :  -4.280928135761822,2.5452328892155567,-1.6829865361077092\n        0  Geometry.BoundingBox().Min.X :  -4.280928135761822\n\nobject  1  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5a3830&gt;\n        1  Geometry                     :  &lt;rhino3dm._rhino3dm.Brep object at 0x10e5e58f0&gt;\n        1  Geometry.ObjectType          :  ObjectType.Brep\n        1  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x10e5e60f0&gt;\n        1  Geometry.BoundingBox().Min   :  0.0,0.0,0.0\n        1  Geometry.BoundingBox().Min.X :  0.0\n\nobject  2  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e609170&gt;\n        2  Geometry                     :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10e5a3830&gt;\n        2  Geometry.ObjectType          :  ObjectType.Curve\n        2  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x10e5e6830&gt;\n        2  Geometry.BoundingBox().Min   :  1.7635839661870252,-22.199390961255418,0.0\n        2  Geometry.BoundingBox().Min.X :  1.7635839661870252\n\n           curve Object       : &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e609170&gt;\n           curve Geometry     : &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10e5e6830&gt;\n           curve IsClosed     : True\n           curve IsPlanar     : True\n           curve IsPolyline   : True\n\n           curve PointCount   : 6\n           curve pt  0  :  1.7635839661870252,-18.01287713465675,0.0\n           curve pt  1  :  5.955418421843674,-9.19466507794998,0.0\n           curve pt  2  :  19.16215707583545,-8.725676195963398,0.0\n           curve pt  3  :  25.715850208939404,-22.199390961255418,0.0\n           curve pt  4  :  13.289303668521596,-15.366027492596611,0.0\n           curve pt  5  :  1.7635839661870252,-18.01287713465675,0.0\n\n           curve SegmentCount : 5\n           segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n           segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n           segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n           segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n           segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n\nobject  3  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5ac4b0&gt;\n        3  Geometry                     :  &lt;rhino3dm._rhino3dm.Mesh object at 0x105940630&gt;\n        3  Geometry.ObjectType          :  ObjectType.Mesh\n        3  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x105940630&gt;\n        3  Geometry.BoundingBox().Min   :  16.164949083117783,-2.8815754439567156,-7.0\n        3  Geometry.BoundingBox().Min.X :  16.164949083117783\n\nobject  4  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10594bc70&gt;\n        4  Geometry                     :  &lt;rhino3dm._rhino3dm.Brep object at 0x10e5ac4b0&gt;\n        4  Geometry.ObjectType          :  ObjectType.Brep\n        4  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x1058e74b0&gt;\n        4  Geometry.BoundingBox().Min   :  -9.675258776512376,-10.151641586438862,0.0\n        4  Geometry.BoundingBox().Min.X :  -9.675258776512376\n\n\n\n\n\n\n\n\n\n\n\nGeomtryBase\n\n\n\n\n\nclass rhino3dm.GeometryBase\n\nAttribs:\n\nObjectType\n…\n\nMethods:\n\nGetBoundingBox()\n…\n\n\n\n\n\n\n\n\n\n\nBoundingBox\n\n\n\n\n\nclass rhino3dm.BoundingBox\n\nConstructor:\n\nBoundingBox(min, max)\nBoundingBox(minX, minY, minZ, maxX, maxY, maxZ)\n…\n\nAttribs:\n\nMin:\n\nrhino3dm.Point3d: Gets or sets the point in the minimal corner.\n\nMax:\n\nrhino3dm.Point3d: Gets or sets the point in the maximal corner.\n\nCenter:\n\nrhino3dm.Point3d: Gets the point in the center of the bounding box.\n\nArea:\n\nfloat: Gets the area of this BoundingBox.\n\nVolume:\n\nfloat: Gets the volume of this BoundingBox.\n\nDiagonal:\n\nrhino3dm.Vector3d: Gets the diagonal vector of this BoundingBox. The diagonal connects the Min and Max points.\n\n\nMethods:\n\nClosestPoint(point)\n\nFinds the closest point on or in the bounding box.\nParameters: point (rhino3dm.Point3d) – Sample point.\nReturns: The point on or in the box that is closest to the sample point.\nReturn type: rhino3dm.Point3d\n\nContains(point)\n\nTests a point for bounding box inclusion. This is the same as calling Contains(point, false)\nParameters: point (rhino3dm.Point3d) – Point to test.\nReturns: True if the point is on the inside of or coincident with this bounding box; otherwise false.\nReturn type: bool\n\n…\n\n\n\n\n\n\n\n\n\n\nPoint3d\n\n\n\n\n\nclass rhino3dm.Point3d\n\nConstructor:\n\nPoint3d(x, y, z)\n\nAttributs:\n\nX: float: Gets or sets the X (first) coordinate of this point.\nY: float: Gets or sets the Y (second) coordinate of this point.\nZ: float: Gets or sets the Z (third) coordinate of this point.\n\nMethods:\n\nDistanceTo(other)\n\nComputes the distance between two points.\nParameters: other (rhino3dm.Point3d) – Other point for distance measurement.\nReturns: The length of the line between this and the other point; or 0 if any of the points is not valid.\nReturn type: float\n\n…\n\n\n\n\n\n\n\n\n\n\nCurve\n\n\n\n\n\nclass rhino3dm.Curve\n\n\n\n\n\n\n\n\n\n\nPolylineCurve\n\n\n\n\n\nclass rhino3dm.PolylineCurve\n\n\n\n\n\n\n\n\n\n\nPolyline\n\n\n\n\n\nclass rhino3dm.Polyline",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 01"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_01.html#read-.3dm-file",
    "href": "pages/rhino3dm/rhino3dm_01.html#read-.3dm-file",
    "title": "rhino3dm exercise 01",
    "section": "",
    "text": "import rhino3dm\n\n1model = rhino3dm.File3dm.Read('./data/oat_model.3dm')\nprint('model object: ', model)\n\n\n1\n\nread .3dm file as File3dm object\n\n\n\n\nmodel object:  &lt;rhino3dm._rhino3dm.File3dm object at 0x10dc8d8b0&gt;\n\n\n\n\n\n\n\n\n\n\nFile3dm.Read()\n\n\n\n\n\nmethod rhino3dm.File3dm.Read()\n\nReads a 3dm file from the specified path.\n\nParameters:\n\npath (str) – The file to read.\n\nReturns:\n\nnew File3dm on success, None on error.\n\nReturn type:\n\nFile3dm",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 01"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_01.html#read-layer",
    "href": "pages/rhino3dm/rhino3dm_01.html#read-layer",
    "title": "rhino3dm exercise 01",
    "section": "",
    "text": "2layer_table = model.Layers\nprint('layer table: ', layer_table, '\\n')\n\n3for idx, layer in enumerate(iter(layer_table)):\n    print('layer ', idx, ' Object  : ', layer)\n    print('      ', idx, ' Id      : ', layer.Id)\n    print('      ', idx, ' Index   : ', layer.Index)\n    print('      ', idx, ' Name    : ', layer.Name)\n    print('      ', idx, ' Fullpath: ', layer.FullPath)\n\n\n2\n\nget the LayerTable object\n\n3\n\niterate LayerTable to get each Layer and its attributes\n\n\n\n\nlayer table:  &lt;rhino3dm._rhino3dm.File3dmLayerTable object at 0x10e3bbbf0&gt; \n\nlayer  0  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x1058eb6f0&gt;\n       0  Id      :  212960d6-ad46-439d-8516-772ce85fde03\n       0  Index   :  0\n       0  Name    :  Default\n       0  Fullpath:  Default\nlayer  1  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10e5d7730&gt;\n       1  Id      :  430ce6c7-13d8-40d9-ae38-08e0e7d0f1df\n       1  Index   :  1\n       1  Name    :  layer_1\n       1  Fullpath:  layer_1\nlayer  2  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10e5d6e30&gt;\n       2  Id      :  8e04c4aa-0bcb-4331-9ac1-79ed7bacc9f1\n       2  Index   :  2\n       2  Name    :  b_1\n       2  Fullpath:  layer_1::b_1\nlayer  3  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10e5d7970&gt;\n       3  Id      :  906c125d-ea30-483a-bf45-6fc769473e09\n       3  Index   :  3\n       3  Name    :  s_1\n       3  Fullpath:  layer_1::s_1\nlayer  4  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10e5d7eb0&gt;\n       4  Id      :  1d1e5147-f5b7-4fa1-82ea-3ece64f5994c\n       4  Index   :  4\n       4  Name    :  layer_2\n       4  Fullpath:  layer_2\n\n\n\n\n\n\n\n\n\n\nFile3dm.Layers\n\n\n\n\n\nattrib rhino3dm.File3dm.Layer\n\nIList: Layers in this file.\n\nReturns:\n\nFile3dmLayerTable\n\n\n\n\n\n\n\n\n\n\nFile3dmLayerTable\n\n\n\n\n\nclass rhino3dm.File3dmLayerTable\n\nEach item is a rhino3dm.Layer object\n\nMethods:\n\n__getitem__()\n__iter__()\n__len__()\n…\n\n\n\n\n\n\n\n\n\n\nLayer\n\n\n\n\n\nclass rhino3dm.Layer\n\nAttributes:\n\nColor\nFullPath\nId\nIndex\nLocked\nName\nParentLayerId\nVisible\n…",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 01"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_01.html#read-objects",
    "href": "pages/rhino3dm/rhino3dm_01.html#read-objects",
    "title": "rhino3dm exercise 01",
    "section": "",
    "text": "4object_table = model.Objects\nprint('object table: ', object_table, '\\n')\n\n5for idx, obj in enumerate(iter(object_table)):\n    print('object ', idx, ' Object                : ', obj)\n    print('       ', idx, ' Geometry              : ', obj.Geometry)\n    print('       ', idx, ' Attributes            : ', obj.Attributes)\n    print('       ', idx, ' Attributes.Id         : ', obj.Attributes.Id)\n    print('       ', idx, ' Attributes.Name       : ', obj.Attributes.Name)\n    print('       ', idx, ' Attributes.LayerIndex : ', obj.Attributes.LayerIndex)\n    print('       ', idx, ' Attributes.ObjectColor: ', obj.Attributes.ObjectColor)\n    print('       ', idx, ' Attributes.Visible    : ', obj.Attributes.Visible)\n    print()\n\n\n4\n\nget ObjectTable in the model\n\n5\n\niterate ObjectTable to get each Object and its attributes\n\n\n\n\nobject table:  &lt;rhino3dm._rhino3dm.File3dmObjectTable object at 0x10e5d4730&gt; \n\nobject  0  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5aff70&gt;\n        0  Geometry              :  &lt;rhino3dm._rhino3dm.Extrusion object at 0x10e5c1c30&gt;\n        0  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10e5c1c30&gt;\n        0  Attributes.Id         :  fc49c0ee-7bd9-4097-961d-3925257a4738\n        0  Attributes.Name       :  solid_1\n        0  Attributes.LayerIndex :  3\n        0  Attributes.ObjectColor:  (255, 255, 0, 255)\n        0  Attributes.Visible    :  True\n\nobject  1  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x1058d76f0&gt;\n        1  Geometry              :  &lt;rhino3dm._rhino3dm.Brep object at 0x10e5aff70&gt;\n        1  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10e5aff70&gt;\n        1  Attributes.Id         :  478a0a94-ad34-41cf-b917-b6b0050dad8f\n        1  Attributes.Name       :  polysurf_2\n        1  Attributes.LayerIndex :  2\n        1  Attributes.ObjectColor:  (255, 127, 0, 255)\n        1  Attributes.Visible    :  True\n\nobject  2  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5e5570&gt;\n        2  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x1058d76f0&gt;\n        2  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x1058d76f0&gt;\n        2  Attributes.Id         :  9afb6b4b-986d-47e6-8d2d-89c6d5448117\n        2  Attributes.Name       :  curve_1\n        2  Attributes.LayerIndex :  0\n        2  Attributes.ObjectColor:  (0, 0, 0, 255)\n        2  Attributes.Visible    :  True\n\nobject  3  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5e60b0&gt;\n        3  Geometry              :  &lt;rhino3dm._rhino3dm.Mesh object at 0x1058d76f0&gt;\n        3  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x1058d76f0&gt;\n        3  Attributes.Id         :  c85d4579-e3df-492c-a4e4-dc9626c19397\n        3  Attributes.Name       :  ball_1\n        3  Attributes.LayerIndex :  4\n        3  Attributes.ObjectColor:  (0, 0, 255, 255)\n        3  Attributes.Visible    :  True\n\nobject  4  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5e58f0&gt;\n        4  Geometry              :  &lt;rhino3dm._rhino3dm.Brep object at 0x1058d76f0&gt;\n        4  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x1058d76f0&gt;\n        4  Attributes.Id         :  19067883-7bbc-4871-91bb-ad640c96bb46\n        4  Attributes.Name       :  polysurf_1\n        4  Attributes.LayerIndex :  2\n        4  Attributes.ObjectColor:  (255, 0, 0, 255)\n        4  Attributes.Visible    :  True\n\n\n\n\n\n\n\n\n\n\n\nFile3dm.Objects\n\n\n\n\n\nattrib rhino3dm.File3dm.Objects\n\nReturns a File3dmObjectTable: Gets access to the class associated with this file, which contains all objects.\n\n\n\n\n\n\n\n\n\nFile3dmObjectTable\n\n\n\n\n\nclass rhino3dm.File3dmObjectTable\n\nEach item is a rhino3dm.Object object\n\nMethods:\n\n__getitem__()\n__iter__()\n__len__()\n…\n\n\n\n\n\n\n\n\n\n\nFile3dmObject\n\n\n\n\n\nclass rhino3dm.File3dmObject\n\nAttribs:\n\nAttributes\n\nObjectAttributes: Gets the attributes that are linked with this document object.\n\nGeometry\n\nrhino3dm.GeometryBase: Gets the geometry that is linked with this document object.\n\n\n\n\n\n\n\n\n\n\n\nObjectAttributes\n\n\n\n\n\nclass rhino3dm.ObjectAttributes\n\nAttribs:\n\nId\nLayerIndex\nMaterialIndex\nName\nObjectColor\nVisible\n…",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 01"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_01.html#read-geometry",
    "href": "pages/rhino3dm/rhino3dm_01.html#read-geometry",
    "title": "rhino3dm exercise 01",
    "section": "",
    "text": "for idx, obj in enumerate(iter(object_table)):\n    print('object ', idx, ' Object                       : ', obj)\n    print('       ', idx, ' Geometry                     : ', obj.Geometry)\n    print('       ', idx, ' Geometry.ObjectType          : ', obj.Geometry.ObjectType)\n    print('       ', idx, ' Geometry.BoundingBox()       : ', obj.Geometry.GetBoundingBox())\n    print('       ', idx, ' Geometry.BoundingBox().Min   : ', obj.Geometry.GetBoundingBox().Min)\n    print('       ', idx, ' Geometry.BoundingBox().Min.X : ', obj.Geometry.GetBoundingBox().Min.X)\n    print('')\n\n    # if isinstance(obj.Geometry, rhino3dm.Curve):\n    if isinstance(obj.Geometry, rhino3dm.PolylineCurve):\n        print('           curve Object       :', obj)\n        print('           curve Geometry     :', obj.Geometry)\n        print('           curve IsClosed     :', obj.Geometry.IsClosed)\n        print('           curve IsPlanar     :', obj.Geometry.IsPlanar())\n        print('           curve IsPolyline   :', obj.Geometry.IsPolyline())\n        print()\n\n        print('           curve PointCount   :', obj.Geometry.PointCount)\n        \n        for i in range(obj.Geometry.PointCount):\n            # print('           curve pt ', i, ' : ', obj.Geometry.ToPolyline().PointAt(i))\n            print('           curve pt ', i, ' : ', obj.Geometry.Point(i))\n\n        print()\n\n        print('           curve SegmentCount :', obj.Geometry.ToPolyline().SegmentCount)\n\n        for i in range(obj.Geometry.ToPolyline().SegmentCount):\n            print('           segement ', i, ' : ', obj.Geometry.ToPolyline().SegmentAt(i))\n\n        print()\n\nobject  0  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e608f70&gt;\n        0  Geometry                     :  &lt;rhino3dm._rhino3dm.Extrusion object at 0x10e5e58f0&gt;\n        0  Geometry.ObjectType          :  ObjectType.Extrusion\n        0  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x10e5a3830&gt;\n        0  Geometry.BoundingBox().Min   :  -4.280928135761822,2.5452328892155567,-1.6829865361077092\n        0  Geometry.BoundingBox().Min.X :  -4.280928135761822\n\nobject  1  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5a3830&gt;\n        1  Geometry                     :  &lt;rhino3dm._rhino3dm.Brep object at 0x10e5e58f0&gt;\n        1  Geometry.ObjectType          :  ObjectType.Brep\n        1  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x10e5e60f0&gt;\n        1  Geometry.BoundingBox().Min   :  0.0,0.0,0.0\n        1  Geometry.BoundingBox().Min.X :  0.0\n\nobject  2  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e609170&gt;\n        2  Geometry                     :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10e5a3830&gt;\n        2  Geometry.ObjectType          :  ObjectType.Curve\n        2  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x10e5e6830&gt;\n        2  Geometry.BoundingBox().Min   :  1.7635839661870252,-22.199390961255418,0.0\n        2  Geometry.BoundingBox().Min.X :  1.7635839661870252\n\n           curve Object       : &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e609170&gt;\n           curve Geometry     : &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10e5e6830&gt;\n           curve IsClosed     : True\n           curve IsPlanar     : True\n           curve IsPolyline   : True\n\n           curve PointCount   : 6\n           curve pt  0  :  1.7635839661870252,-18.01287713465675,0.0\n           curve pt  1  :  5.955418421843674,-9.19466507794998,0.0\n           curve pt  2  :  19.16215707583545,-8.725676195963398,0.0\n           curve pt  3  :  25.715850208939404,-22.199390961255418,0.0\n           curve pt  4  :  13.289303668521596,-15.366027492596611,0.0\n           curve pt  5  :  1.7635839661870252,-18.01287713465675,0.0\n\n           curve SegmentCount : 5\n           segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n           segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n           segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n           segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n           segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x105940630&gt;\n\nobject  3  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10e5ac4b0&gt;\n        3  Geometry                     :  &lt;rhino3dm._rhino3dm.Mesh object at 0x105940630&gt;\n        3  Geometry.ObjectType          :  ObjectType.Mesh\n        3  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x105940630&gt;\n        3  Geometry.BoundingBox().Min   :  16.164949083117783,-2.8815754439567156,-7.0\n        3  Geometry.BoundingBox().Min.X :  16.164949083117783\n\nobject  4  Object                       :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10594bc70&gt;\n        4  Geometry                     :  &lt;rhino3dm._rhino3dm.Brep object at 0x10e5ac4b0&gt;\n        4  Geometry.ObjectType          :  ObjectType.Brep\n        4  Geometry.BoundingBox()       :  &lt;rhino3dm._rhino3dm.BoundingBox object at 0x1058e74b0&gt;\n        4  Geometry.BoundingBox().Min   :  -9.675258776512376,-10.151641586438862,0.0\n        4  Geometry.BoundingBox().Min.X :  -9.675258776512376\n\n\n\n\n\n\n\n\n\n\n\nGeomtryBase\n\n\n\n\n\nclass rhino3dm.GeometryBase\n\nAttribs:\n\nObjectType\n…\n\nMethods:\n\nGetBoundingBox()\n…\n\n\n\n\n\n\n\n\n\n\nBoundingBox\n\n\n\n\n\nclass rhino3dm.BoundingBox\n\nConstructor:\n\nBoundingBox(min, max)\nBoundingBox(minX, minY, minZ, maxX, maxY, maxZ)\n…\n\nAttribs:\n\nMin:\n\nrhino3dm.Point3d: Gets or sets the point in the minimal corner.\n\nMax:\n\nrhino3dm.Point3d: Gets or sets the point in the maximal corner.\n\nCenter:\n\nrhino3dm.Point3d: Gets the point in the center of the bounding box.\n\nArea:\n\nfloat: Gets the area of this BoundingBox.\n\nVolume:\n\nfloat: Gets the volume of this BoundingBox.\n\nDiagonal:\n\nrhino3dm.Vector3d: Gets the diagonal vector of this BoundingBox. The diagonal connects the Min and Max points.\n\n\nMethods:\n\nClosestPoint(point)\n\nFinds the closest point on or in the bounding box.\nParameters: point (rhino3dm.Point3d) – Sample point.\nReturns: The point on or in the box that is closest to the sample point.\nReturn type: rhino3dm.Point3d\n\nContains(point)\n\nTests a point for bounding box inclusion. This is the same as calling Contains(point, false)\nParameters: point (rhino3dm.Point3d) – Point to test.\nReturns: True if the point is on the inside of or coincident with this bounding box; otherwise false.\nReturn type: bool\n\n…\n\n\n\n\n\n\n\n\n\n\nPoint3d\n\n\n\n\n\nclass rhino3dm.Point3d\n\nConstructor:\n\nPoint3d(x, y, z)\n\nAttributs:\n\nX: float: Gets or sets the X (first) coordinate of this point.\nY: float: Gets or sets the Y (second) coordinate of this point.\nZ: float: Gets or sets the Z (third) coordinate of this point.\n\nMethods:\n\nDistanceTo(other)\n\nComputes the distance between two points.\nParameters: other (rhino3dm.Point3d) – Other point for distance measurement.\nReturns: The length of the line between this and the other point; or 0 if any of the points is not valid.\nReturn type: float\n\n…\n\n\n\n\n\n\n\n\n\n\nCurve\n\n\n\n\n\nclass rhino3dm.Curve\n\n\n\n\n\n\n\n\n\n\nPolylineCurve\n\n\n\n\n\nclass rhino3dm.PolylineCurve\n\n\n\n\n\n\n\n\n\n\nPolyline\n\n\n\n\n\nclass rhino3dm.Polyline",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 01"
    ]
  },
  {
    "objectID": "pages/quarto/quarto_tabset.html",
    "href": "pages/quarto/quarto_tabset.html",
    "title": "quarto tabset",
    "section": "",
    "text": "1 Syntax\n::: {.panel-tabset}\n\n## Tabset A\n```python\nimport polars as pl\nprint('polars version:', pl.__version__)\n```\n\n## Tabset B \n```python\nimport pandas as pd\nprint('pandas version:', pd.__version__)\n```\n\n:::\n\n\n2 Example\n\nuse polars df in plotlyuse pandas df in plotly\n\n\n\nimport polars as pl\nimport plotly.express as px\n\nwide_df = pl.DataFrame(\n    {\n        \"nation\": [\"South Korea\", \"China\", \"Canada\"],\n        \"gold\": [24, 10, 9],\n        \"silver\": [13, 15, 12],\n        \"bronze\": [9, 12, 12],\n    }\n)\n\nfig = px.bar(\n    wide_df,\n    x=\"nation\",\n    y=[\"gold\", \"silver\", \"bronze\"],\n    title=\"Wide-Form Input\"\n)\n\nfig.show()\n\n                                                \n\n\n\n\n\nimport plotly.express as px\n\ndf = px.data.iris()\n\n# Use directly Columns as argument. You can use tab completion for this!\nfig = px.scatter(\n    df,\n    x=df.sepal_length,\n    y=df.sepal_width,\n    color=df.species,\n    size=df.petal_length\n)\n\nfig.show()\n\n                                                \n\n\n\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Quarto",
      "quarto tabset"
    ]
  },
  {
    "objectID": "pages/polars/merge_csvs.html",
    "href": "pages/polars/merge_csvs.html",
    "title": "Merge CSVs",
    "section": "",
    "text": "from glob import glob\nimport os\n\nimport polars as pl\npl.Config(tbl_rows=10)\n\n&lt;polars.config.Config at 0x107f3d650&gt;\n\n\n\n1 glob CSVs in a folder\n\ncsv_dir = \"./data/csv/\"\ncsv_path_glob = os.path.join(csv_dir, '*.csv')\ncsv_list = glob(csv_path_glob)\n\nfor idx, csv in enumerate(csv_list):\n    print('csv ', idx, ' : ', csv)\n\ncsv  0  :  ./data/csv/cn_zone_1_08_updated.csv\ncsv  1  :  ./data/csv/cn_zone_1_04_updated.csv\ncsv  2  :  ./data/csv/cn_zone_1_07_updated.csv\ncsv  3  :  ./data/csv/cn_zone_1_05_updated.csv\ncsv  4  :  ./data/csv/cn_zone_1_06_updated.csv\n\n\n\n\n\n\n\n\n\n\nglob\n\n\n\n\n\nglob\n\n\n\n\n\n2 merge CSVs into a df\n\n%%time\n\n1df_merged = pl.read_csv(csv_path_glob)\n\n# q = (\n#     pl.scan_csv(csv_path_glob)\n# )\n# df_merged = q.collect()\n\ndf_merged\n\n\n1\n\nUse globbing patterns to read multiple files into a single DF.\n\n\n\n\nCPU times: user 3.17 ms, sys: 18 ms, total: 21.1 ms\nWall time: 5.93 ms\n\n\n\nshape: (436, 22)\n\n\n\nstring_idx\nstring_name\nstring_name_x\nstring_name_y\nstring_box_idx\nCB_name\nPhase\nstring_num\nstring_box_v1_x\nstring_box_v1_y\nstring_box_v2_x\nstring_box_v2_y\nstring_box_v3_x\nstring_box_v3_y\nstring_box_v4_x\nstring_box_v4_y\nnum_modules\nmodule_layout\ndist_btw_v0_v1\ndist_btw_v1_v2\nnum_module_along_x\nnum_module_along_y\n\n\ni64\nstr\nf64\nf64\ni64\ni64\ni64\ni64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\ni64\nstr\nf64\nf64\ni64\ni64\n\n\n\n\n0\n\"1-4-NB05-10\"\n4371.812002\n2242.231026\n0\n0\n0\n0\n4354.626954\n2242.689021\n4354.626954\n2241.77303\n4388.997049\n2241.77303\n4388.997049\n2242.689021\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n0\n\"1-4-NB05-10\"\n4371.812002\n2243.227919\n1\n0\n0\n0\n4354.626954\n2243.685915\n4354.626954\n2242.769924\n4388.997049\n2242.769924\n4388.997049\n2243.685915\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n1\n\"1-4-NB05-9\"\n4371.812002\n2244.224813\n0\n0\n0\n0\n4354.626954\n2244.682809\n4354.626954\n2243.766818\n4388.997049\n2243.766818\n4388.997049\n2244.682809\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n1\n\"1-4-NB05-9\"\n4371.812002\n2245.221707\n1\n0\n0\n0\n4354.626954\n2245.679702\n4354.626954\n2244.763711\n4388.997049\n2244.763711\n4388.997049\n2245.679702\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n2\n\"1-4-NB05-12\"\n4406.79557\n2242.091945\n0\n0\n0\n0\n4389.610523\n2242.549941\n4389.610523\n2241.63395\n4423.980618\n2241.63395\n4423.980618\n2242.549941\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n\n\n22\n\"1-8-NB02-3\"\n4478.810262\n2464.772732\n1\n0\n0\n0\n4491.035789\n2464.304492\n4491.035789\n2465.244649\n4466.584735\n2465.244649\n4466.584735\n2464.29714\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n22\n\"1-8-NB02-3\"\n4478.810262\n2465.766136\n2\n0\n0\n0\n4491.035789\n2465.297896\n4491.035789\n2466.238052\n4466.584735\n2466.238052\n4466.584735\n2465.290544\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n23\n\"1-8-NB02-4\"\n4503.839598\n2463.755058\n0\n0\n0\n0\n4516.065125\n2463.286818\n4516.065125\n2464.226974\n4491.614072\n2464.226974\n4491.614072\n2463.279466\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n23\n\"1-8-NB02-4\"\n4503.839598\n2464.748462\n1\n0\n0\n0\n4516.065125\n2464.280222\n4516.065125\n2465.220378\n4491.614072\n2465.220378\n4491.614072\n2464.27287\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n23\n\"1-8-NB02-4\"\n4503.839598\n2465.741866\n2\n0\n0\n0\n4516.065125\n2465.273626\n4516.065125\n2466.213782\n4491.614072\n2466.213782\n4491.614072\n2465.266274\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDealing with multple files\n\n\n\n\n\nMultiple\n\n\n\n\n\n\n\n\n\npolars.read_csv\n\n\n\n\n\npolars.read_csv\n\n\n\n\n\n\n\n\n\npolars.scan_csv\n\n\n\n\n\npolars.scan_csv\n\n\n\n\n\n3 write the df as a merged CSV\n\ncsv_merged_path = os.path.join(\"./data/csv_merged/\", \"cn_zone_1_04-08_merged.csv\")\ndf_merged.write_csv(csv_merged_path)\nprint('...merged csv written.')\ndf_merged\n\n...merged csv written.\n\n\n\nshape: (436, 22)\n\n\n\nstring_idx\nstring_name\nstring_name_x\nstring_name_y\nstring_box_idx\nCB_name\nPhase\nstring_num\nstring_box_v1_x\nstring_box_v1_y\nstring_box_v2_x\nstring_box_v2_y\nstring_box_v3_x\nstring_box_v3_y\nstring_box_v4_x\nstring_box_v4_y\nnum_modules\nmodule_layout\ndist_btw_v0_v1\ndist_btw_v1_v2\nnum_module_along_x\nnum_module_along_y\n\n\ni64\nstr\nf64\nf64\ni64\ni64\ni64\ni64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\ni64\nstr\nf64\nf64\ni64\ni64\n\n\n\n\n0\n\"1-4-NB05-10\"\n4371.812002\n2242.231026\n0\n0\n0\n0\n4354.626954\n2242.689021\n4354.626954\n2241.77303\n4388.997049\n2241.77303\n4388.997049\n2242.689021\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n0\n\"1-4-NB05-10\"\n4371.812002\n2243.227919\n1\n0\n0\n0\n4354.626954\n2243.685915\n4354.626954\n2242.769924\n4388.997049\n2242.769924\n4388.997049\n2243.685915\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n1\n\"1-4-NB05-9\"\n4371.812002\n2244.224813\n0\n0\n0\n0\n4354.626954\n2244.682809\n4354.626954\n2243.766818\n4388.997049\n2243.766818\n4388.997049\n2244.682809\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n1\n\"1-4-NB05-9\"\n4371.812002\n2245.221707\n1\n0\n0\n0\n4354.626954\n2245.679702\n4354.626954\n2244.763711\n4388.997049\n2244.763711\n4388.997049\n2245.679702\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n2\n\"1-4-NB05-12\"\n4406.79557\n2242.091945\n0\n0\n0\n0\n4389.610523\n2242.549941\n4389.610523\n2241.63395\n4423.980618\n2241.63395\n4423.980618\n2242.549941\n14\n\"L\"\n0.916\n34.37\n1\n14\n\n\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n…\n\n\n22\n\"1-8-NB02-3\"\n4478.810262\n2464.772732\n1\n0\n0\n0\n4491.035789\n2464.304492\n4491.035789\n2465.244649\n4466.584735\n2465.244649\n4466.584735\n2464.29714\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n22\n\"1-8-NB02-3\"\n4478.810262\n2465.766136\n2\n0\n0\n0\n4491.035789\n2465.297896\n4491.035789\n2466.238052\n4466.584735\n2466.238052\n4466.584735\n2465.290544\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n23\n\"1-8-NB02-4\"\n4503.839598\n2463.755058\n0\n0\n0\n0\n4516.065125\n2463.286818\n4516.065125\n2464.226974\n4491.614072\n2464.226974\n4491.614072\n2463.279466\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n23\n\"1-8-NB02-4\"\n4503.839598\n2464.748462\n1\n0\n0\n0\n4516.065125\n2464.280222\n4516.065125\n2465.220378\n4491.614072\n2465.220378\n4491.614072\n2464.27287\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n23\n\"1-8-NB02-4\"\n4503.839598\n2465.741866\n2\n0\n0\n0\n4516.065125\n2465.273626\n4516.065125\n2466.213782\n4491.614072\n2466.213782\n4491.614072\n2465.266274\n10\n\"L\"\n0.94\n24.451\n1\n10\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npolars.DataFrame.write_csv\n\n\n\n\n\npolars.DataFrame.write_csv\n\n\n\n\n\n4 (lazy-)filter a DF by a list of items in a column\n%%time\n\nstrings_to_filter = [\n    '1-4-NB05-10',\n    '1-4-NB05-9',\n    '1-8-NB02-4',\n]\n\n2query = (\n    pl.scan_csv(csv_path_glob)\n      .filter(pl.col('string_name')\n      .is_in(strings_to_filter))\n)\n\n3df_filtered = query.collect()\n\ndf_filtered\n\n2\n\nBuild a query(s) in lazy mode\n\n3\n\nexecute the query(s) when its collected\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlazy/eager API\n\n\n\n\n\nLazy/eager API\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Polars",
      "Merge CSVs"
    ]
  },
  {
    "objectID": "pages/plotly/plotly_data_structure.html",
    "href": "pages/plotly/plotly_data_structure.html",
    "title": "show data strucure of a plotly figure",
    "section": "",
    "text": "import plotly.express as px\n\nfig = px.line(\n    x=[\"a\",\"b\",\"c\"],\n    y=[1,3,2],\n    title=\"sample figure\"\n)\n\nfig.show()",
    "crumbs": [
      "Home",
      "Plotly",
      "show data strucure of a plotly figure"
    ]
  },
  {
    "objectID": "pages/plotly/plotly_data_structure.html#printfig",
    "href": "pages/plotly/plotly_data_structure.html#printfig",
    "title": "show data strucure of a plotly figure",
    "section": "2.1 print(fig)",
    "text": "2.1 print(fig)\nAs a verbose layout.template key (shown as ellipses ... for brevity).\n\nprint(fig)      # opt 1\n# fig.to_dict()   # opt 2\n# fig.to_json()   # opt 3\n\nFigure({\n    'data': [{'hovertemplate': 'x=%{x}&lt;br&gt;y=%{y}&lt;extra&gt;&lt;/extra&gt;',\n              'legendgroup': '',\n              'line': {'color': '#636efa', 'dash': 'solid'},\n              'marker': {'symbol': 'circle'},\n              'mode': 'lines',\n              'name': '',\n              'orientation': 'v',\n              'showlegend': False,\n              'type': 'scatter',\n              'x': array(['a', 'b', 'c'], dtype=object),\n              'xaxis': 'x',\n              'y': array([1, 3, 2]),\n              'yaxis': 'y'}],\n    'layout': {'legend': {'tracegroupgap': 0},\n               'template': '...',\n               'title': {'text': 'sample figure'},\n               'xaxis': {'anchor': 'y', 'domain': [0.0, 1.0], 'title': {'text': 'x'}},\n               'yaxis': {'anchor': 'x', 'domain': [0.0, 1.0], 'title': {'text': 'y'}}}\n})",
    "crumbs": [
      "Home",
      "Plotly",
      "show data strucure of a plotly figure"
    ]
  },
  {
    "objectID": "pages/plotly/plotly_data_structure.html#fig.to_dict",
    "href": "pages/plotly/plotly_data_structure.html#fig.to_dict",
    "title": "show data strucure of a plotly figure",
    "section": "2.2 fig.to_dict()",
    "text": "2.2 fig.to_dict()\nShown as a dictionary.\n\n# print(fig)      # opt 1\nfig.to_dict()   # opt 2\n# fig.to_json()   # opt 3\n\n{'data': [{'hovertemplate': 'x=%{x}&lt;br&gt;y=%{y}&lt;extra&gt;&lt;/extra&gt;',\n   'legendgroup': '',\n   'line': {'color': '#636efa', 'dash': 'solid'},\n   'marker': {'symbol': 'circle'},\n   'mode': 'lines',\n   'name': '',\n   'orientation': 'v',\n   'showlegend': False,\n   'x': array(['a', 'b', 'c'], dtype=object),\n   'xaxis': 'x',\n   'y': array([1, 3, 2]),\n   'yaxis': 'y',\n   'type': 'scatter'}],\n 'layout': {'template': {'data': {'histogram2dcontour': [{'type': 'histogram2dcontour',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''},\n      'colorscale': [[0.0, '#0d0887'],\n       [0.1111111111111111, '#46039f'],\n       [0.2222222222222222, '#7201a8'],\n       [0.3333333333333333, '#9c179e'],\n       [0.4444444444444444, '#bd3786'],\n       [0.5555555555555556, '#d8576b'],\n       [0.6666666666666666, '#ed7953'],\n       [0.7777777777777778, '#fb9f3a'],\n       [0.8888888888888888, '#fdca26'],\n       [1.0, '#f0f921']]}],\n    'choropleth': [{'type': 'choropleth',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''}}],\n    'histogram2d': [{'type': 'histogram2d',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''},\n      'colorscale': [[0.0, '#0d0887'],\n       [0.1111111111111111, '#46039f'],\n       [0.2222222222222222, '#7201a8'],\n       [0.3333333333333333, '#9c179e'],\n       [0.4444444444444444, '#bd3786'],\n       [0.5555555555555556, '#d8576b'],\n       [0.6666666666666666, '#ed7953'],\n       [0.7777777777777778, '#fb9f3a'],\n       [0.8888888888888888, '#fdca26'],\n       [1.0, '#f0f921']]}],\n    'heatmap': [{'type': 'heatmap',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''},\n      'colorscale': [[0.0, '#0d0887'],\n       [0.1111111111111111, '#46039f'],\n       [0.2222222222222222, '#7201a8'],\n       [0.3333333333333333, '#9c179e'],\n       [0.4444444444444444, '#bd3786'],\n       [0.5555555555555556, '#d8576b'],\n       [0.6666666666666666, '#ed7953'],\n       [0.7777777777777778, '#fb9f3a'],\n       [0.8888888888888888, '#fdca26'],\n       [1.0, '#f0f921']]}],\n    'heatmapgl': [{'type': 'heatmapgl',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''},\n      'colorscale': [[0.0, '#0d0887'],\n       [0.1111111111111111, '#46039f'],\n       [0.2222222222222222, '#7201a8'],\n       [0.3333333333333333, '#9c179e'],\n       [0.4444444444444444, '#bd3786'],\n       [0.5555555555555556, '#d8576b'],\n       [0.6666666666666666, '#ed7953'],\n       [0.7777777777777778, '#fb9f3a'],\n       [0.8888888888888888, '#fdca26'],\n       [1.0, '#f0f921']]}],\n    'contourcarpet': [{'type': 'contourcarpet',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''}}],\n    'contour': [{'type': 'contour',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''},\n      'colorscale': [[0.0, '#0d0887'],\n       [0.1111111111111111, '#46039f'],\n       [0.2222222222222222, '#7201a8'],\n       [0.3333333333333333, '#9c179e'],\n       [0.4444444444444444, '#bd3786'],\n       [0.5555555555555556, '#d8576b'],\n       [0.6666666666666666, '#ed7953'],\n       [0.7777777777777778, '#fb9f3a'],\n       [0.8888888888888888, '#fdca26'],\n       [1.0, '#f0f921']]}],\n    'surface': [{'type': 'surface',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''},\n      'colorscale': [[0.0, '#0d0887'],\n       [0.1111111111111111, '#46039f'],\n       [0.2222222222222222, '#7201a8'],\n       [0.3333333333333333, '#9c179e'],\n       [0.4444444444444444, '#bd3786'],\n       [0.5555555555555556, '#d8576b'],\n       [0.6666666666666666, '#ed7953'],\n       [0.7777777777777778, '#fb9f3a'],\n       [0.8888888888888888, '#fdca26'],\n       [1.0, '#f0f921']]}],\n    'mesh3d': [{'type': 'mesh3d',\n      'colorbar': {'outlinewidth': 0, 'ticks': ''}}],\n    'scatter': [{'fillpattern': {'fillmode': 'overlay',\n       'size': 10,\n       'solidity': 0.2},\n      'type': 'scatter'}],\n    'parcoords': [{'type': 'parcoords',\n      'line': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'scatterpolargl': [{'type': 'scatterpolargl',\n      'marker': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'bar': [{'error_x': {'color': '#2a3f5f'},\n      'error_y': {'color': '#2a3f5f'},\n      'marker': {'line': {'color': '#E5ECF6', 'width': 0.5},\n       'pattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}},\n      'type': 'bar'}],\n    'scattergeo': [{'type': 'scattergeo',\n      'marker': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'scatterpolar': [{'type': 'scatterpolar',\n      'marker': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'histogram': [{'marker': {'pattern': {'fillmode': 'overlay',\n        'size': 10,\n        'solidity': 0.2}},\n      'type': 'histogram'}],\n    'scattergl': [{'type': 'scattergl',\n      'marker': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'scatter3d': [{'type': 'scatter3d',\n      'line': {'colorbar': {'outlinewidth': 0, 'ticks': ''}},\n      'marker': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'scattermapbox': [{'type': 'scattermapbox',\n      'marker': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'scatterternary': [{'type': 'scatterternary',\n      'marker': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'scattercarpet': [{'type': 'scattercarpet',\n      'marker': {'colorbar': {'outlinewidth': 0, 'ticks': ''}}}],\n    'carpet': [{'aaxis': {'endlinecolor': '#2a3f5f',\n       'gridcolor': 'white',\n       'linecolor': 'white',\n       'minorgridcolor': 'white',\n       'startlinecolor': '#2a3f5f'},\n      'baxis': {'endlinecolor': '#2a3f5f',\n       'gridcolor': 'white',\n       'linecolor': 'white',\n       'minorgridcolor': 'white',\n       'startlinecolor': '#2a3f5f'},\n      'type': 'carpet'}],\n    'table': [{'cells': {'fill': {'color': '#EBF0F8'},\n       'line': {'color': 'white'}},\n      'header': {'fill': {'color': '#C8D4E3'}, 'line': {'color': 'white'}},\n      'type': 'table'}],\n    'barpolar': [{'marker': {'line': {'color': '#E5ECF6', 'width': 0.5},\n       'pattern': {'fillmode': 'overlay', 'size': 10, 'solidity': 0.2}},\n      'type': 'barpolar'}],\n    'pie': [{'automargin': True, 'type': 'pie'}]},\n   'layout': {'autotypenumbers': 'strict',\n    'colorway': ['#636efa',\n     '#EF553B',\n     '#00cc96',\n     '#ab63fa',\n     '#FFA15A',\n     '#19d3f3',\n     '#FF6692',\n     '#B6E880',\n     '#FF97FF',\n     '#FECB52'],\n    'font': {'color': '#2a3f5f'},\n    'hovermode': 'closest',\n    'hoverlabel': {'align': 'left'},\n    'paper_bgcolor': 'white',\n    'plot_bgcolor': '#E5ECF6',\n    'polar': {'bgcolor': '#E5ECF6',\n     'angularaxis': {'gridcolor': 'white', 'linecolor': 'white', 'ticks': ''},\n     'radialaxis': {'gridcolor': 'white', 'linecolor': 'white', 'ticks': ''}},\n    'ternary': {'bgcolor': '#E5ECF6',\n     'aaxis': {'gridcolor': 'white', 'linecolor': 'white', 'ticks': ''},\n     'baxis': {'gridcolor': 'white', 'linecolor': 'white', 'ticks': ''},\n     'caxis': {'gridcolor': 'white', 'linecolor': 'white', 'ticks': ''}},\n    'coloraxis': {'colorbar': {'outlinewidth': 0, 'ticks': ''}},\n    'colorscale': {'sequential': [[0.0, '#0d0887'],\n      [0.1111111111111111, '#46039f'],\n      [0.2222222222222222, '#7201a8'],\n      [0.3333333333333333, '#9c179e'],\n      [0.4444444444444444, '#bd3786'],\n      [0.5555555555555556, '#d8576b'],\n      [0.6666666666666666, '#ed7953'],\n      [0.7777777777777778, '#fb9f3a'],\n      [0.8888888888888888, '#fdca26'],\n      [1.0, '#f0f921']],\n     'sequentialminus': [[0.0, '#0d0887'],\n      [0.1111111111111111, '#46039f'],\n      [0.2222222222222222, '#7201a8'],\n      [0.3333333333333333, '#9c179e'],\n      [0.4444444444444444, '#bd3786'],\n      [0.5555555555555556, '#d8576b'],\n      [0.6666666666666666, '#ed7953'],\n      [0.7777777777777778, '#fb9f3a'],\n      [0.8888888888888888, '#fdca26'],\n      [1.0, '#f0f921']],\n     'diverging': [[0, '#8e0152'],\n      [0.1, '#c51b7d'],\n      [0.2, '#de77ae'],\n      [0.3, '#f1b6da'],\n      [0.4, '#fde0ef'],\n      [0.5, '#f7f7f7'],\n      [0.6, '#e6f5d0'],\n      [0.7, '#b8e186'],\n      [0.8, '#7fbc41'],\n      [0.9, '#4d9221'],\n      [1, '#276419']]},\n    'xaxis': {'gridcolor': 'white',\n     'linecolor': 'white',\n     'ticks': '',\n     'title': {'standoff': 15},\n     'zerolinecolor': 'white',\n     'automargin': True,\n     'zerolinewidth': 2},\n    'yaxis': {'gridcolor': 'white',\n     'linecolor': 'white',\n     'ticks': '',\n     'title': {'standoff': 15},\n     'zerolinecolor': 'white',\n     'automargin': True,\n     'zerolinewidth': 2},\n    'scene': {'xaxis': {'backgroundcolor': '#E5ECF6',\n      'gridcolor': 'white',\n      'linecolor': 'white',\n      'showbackground': True,\n      'ticks': '',\n      'zerolinecolor': 'white',\n      'gridwidth': 2},\n     'yaxis': {'backgroundcolor': '#E5ECF6',\n      'gridcolor': 'white',\n      'linecolor': 'white',\n      'showbackground': True,\n      'ticks': '',\n      'zerolinecolor': 'white',\n      'gridwidth': 2},\n     'zaxis': {'backgroundcolor': '#E5ECF6',\n      'gridcolor': 'white',\n      'linecolor': 'white',\n      'showbackground': True,\n      'ticks': '',\n      'zerolinecolor': 'white',\n      'gridwidth': 2}},\n    'shapedefaults': {'line': {'color': '#2a3f5f'}},\n    'annotationdefaults': {'arrowcolor': '#2a3f5f',\n     'arrowhead': 0,\n     'arrowwidth': 1},\n    'geo': {'bgcolor': 'white',\n     'landcolor': '#E5ECF6',\n     'subunitcolor': 'white',\n     'showland': True,\n     'showlakes': True,\n     'lakecolor': 'white'},\n    'title': {'x': 0.05},\n    'mapbox': {'style': 'light'},\n    'margin': {'b': 0, 'l': 0, 'r': 0, 't': 30}}},\n  'xaxis': {'anchor': 'y', 'domain': [0.0, 1.0], 'title': {'text': 'x'}},\n  'yaxis': {'anchor': 'x', 'domain': [0.0, 1.0], 'title': {'text': 'y'}},\n  'legend': {'tracegroupgap': 0},\n  'title': {'text': 'sample figure'}}}",
    "crumbs": [
      "Home",
      "Plotly",
      "show data strucure of a plotly figure"
    ]
  },
  {
    "objectID": "pages/plotly/plotly_data_structure.html#fig.to_json",
    "href": "pages/plotly/plotly_data_structure.html#fig.to_json",
    "title": "show data strucure of a plotly figure",
    "section": "2.3 fig.to_json()",
    "text": "2.3 fig.to_json()\nShown as a JSON file.\n\n# print(fig)      # opt 1\n# fig.to_dict()   # opt 2\nfig.to_json()   # opt 3\n\n'{\"data\":[{\"hovertemplate\":\"x=%{x}\\\\u003cbr\\\\u003ey=%{y}\\\\u003cextra\\\\u003e\\\\u003c\\\\u002fextra\\\\u003e\",\"legendgroup\":\"\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"\",\"orientation\":\"v\",\"showlegend\":false,\"x\":[\"a\",\"b\",\"c\"],\"xaxis\":\"x\",\"y\":[1,3,2],\"yaxis\":\"y\",\"type\":\"scatter\"}],\"layout\":{\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"x\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"y\"}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"sample figure\"}}}'",
    "crumbs": [
      "Home",
      "Plotly",
      "show data strucure of a plotly figure"
    ]
  },
  {
    "objectID": "pages/lazyvim/lazyvim_tips.html",
    "href": "pages/lazyvim/lazyvim_tips.html",
    "title": "LazyVim Tips",
    "section": "",
    "text": "/lua/plugins/flash.lua\n\nreturn {\n    \"folke/flash.nvim\",\n\n    event = \"VeryLazy\",\n\n    ---@type Flash.Config\n    opts = {\n        modes = {\n            -- options used when flash is activated through\n            -- a regular search with `/` or `?`\n            search = {\n                -- when `true`, flash will be activated during regular search by default.\n                -- You can always toggle when searching with `require(\"flash\").toggle()`\n                enabled = true, \n            },\n        },\n    },\n\n    -- other settings...\n}\n\n\nRef: flash.nvim usage",
    "crumbs": [
      "Home",
      "LazyVim",
      "LazyVim Tips"
    ]
  },
  {
    "objectID": "pages/lazyvim/lazyvim_tips.html#flash.nvim-do-regular-search-using-or-with-jump-lables",
    "href": "pages/lazyvim/lazyvim_tips.html#flash.nvim-do-regular-search-using-or-with-jump-lables",
    "title": "LazyVim Tips",
    "section": "",
    "text": "/lua/plugins/flash.lua\n\nreturn {\n    \"folke/flash.nvim\",\n\n    event = \"VeryLazy\",\n\n    ---@type Flash.Config\n    opts = {\n        modes = {\n            -- options used when flash is activated through\n            -- a regular search with `/` or `?`\n            search = {\n                -- when `true`, flash will be activated during regular search by default.\n                -- You can always toggle when searching with `require(\"flash\").toggle()`\n                enabled = true, \n            },\n        },\n    },\n\n    -- other settings...\n}\n\n\nRef: flash.nvim usage",
    "crumbs": [
      "Home",
      "LazyVim",
      "LazyVim Tips"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Oat is a learner.\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "dashboard.html",
    "href": "dashboard.html",
    "title": "Worldwide Development",
    "section": "",
    "text": "import plotly.express as px\ndf = px.data.gapminder()\ndf = df[df['continent'] != 'Oceania']"
  },
  {
    "objectID": "dashboard.html#row",
    "href": "dashboard.html#row",
    "title": "Worldwide Development",
    "section": "Row",
    "text": "Row\n\npx.scatter(\n  df, x=\"gdpPercap\", y=\"lifeExp\", \n  animation_frame=\"year\", animation_group=\"country\",\n  size=\"pop\", color=\"continent\", hover_name=\"country\", \n  facet_col=\"continent\", log_x=True, size_max=45, \n  range_x=[100,100000], range_y=[25,90]\n)"
  },
  {
    "objectID": "dashboard.html#row-1",
    "href": "dashboard.html#row-1",
    "title": "Worldwide Development",
    "section": "Row",
    "text": "Row\n\npx.area(df, x=\"year\", y=\"pop\", color=\"continent\", line_group=\"country\")\n\n                                                \n\n\n\npx.line(df, x=\"year\", y=\"lifeExp\", color=\"continent\", line_group=\"country\")"
  },
  {
    "objectID": "pages/observable/observable_js.html",
    "href": "pages/observable/observable_js.html",
    "title": "Test Observable.js",
    "section": "",
    "text": "Source: Observable Template for Three.js\n\nrenderer.domElement\n\n\n\n\n\n\n\n// Continuously updates\n{\n  while (true) {\n    cube.rotation.z += 0.01;\n    renderer.render(scene, camera);\n    yield null;\n  }\n}\n\n\n\n\n\n\n\nheight = 600\n\n\n\n\n\n\n\ncube = {\n  const material = new THREE.MeshNormalMaterial();\n  const geometry = new THREE.BoxGeometry(1, 1, 1);\n  const cube = new THREE.Mesh(geometry, material);\n  return cube;\n}\n\n\n\n\n\n\n\nscene = {\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0x001b42);\n  scene.add(cube);\n  return scene;\n}\n\n\n\n\n\n\n\ncamera = {\n  const fov = 45;\n  const aspect = width / height;\n  const near = 1;\n  const far = 1000;\n  const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\n  camera.position.set(2, 2, -2)\n  camera.lookAt(new THREE.Vector3(0, 0, 0));\n  return camera;\n}\n\n\n\n\n\n\n\nrenderer = {\n  const renderer = new THREE.WebGLRenderer({antialias: true});\n  renderer.setSize(width, height);\n  renderer.setPixelRatio(devicePixelRatio);\n  const controls = new THREE.OrbitControls(camera, renderer.domElement);\n  controls.addEventListener(\"change\", () =&gt; renderer.render(scene, camera));\n  invalidation.then(() =&gt; (controls.dispose(), renderer.dispose()));\n  return renderer;\n}\n\n\n\n\n\n\n\nTHREE = {\n  const THREE = window.THREE = await require(\"three@0.130.0/build/three.min.js\");\n  await require(\"three@0.130.0/examples/js/controls/OrbitControls.js\").catch(() =&gt; {});\n  return THREE;\n}\n\n\n\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Observable.js",
      "Test Observable.js"
    ]
  },
  {
    "objectID": "pages/plotly/transparent_fig_bgcolor.html",
    "href": "pages/plotly/transparent_fig_bgcolor.html",
    "title": "Transparent bgcolor for figure",
    "section": "",
    "text": "Use the rgba() attrib to set the alpha, or transparency, of the plot/paper components of a figure.\n\n\n\nwithout transparency\n\n\nimport plotly.express as px\n\ndf = px.data.iris()\n\nfig = px.scatter(\n    df,\n    x=\"sepal_width\",\n    y=\"sepal_length\",\n    color=\"species\",\n    size='petal_length',\n    hover_data=['petal_width']\n)\n\n# fig.update_layout({\n#     'plot_bgcolor' : 'rgba(255, 255, 0,   0.5)',\n#     'paper_bgcolor': 'rgba(0,   0,   255, 0.5)',\n# })\n\nfig.show()\n\n                                                \n\n\n\n\nwith transparency\n\n\nimport plotly.express as px\n\ndf = px.data.iris()\n\nfig = px.scatter(\n    df,\n    x=\"sepal_width\",\n    y=\"sepal_length\",\n    color=\"species\",\n    size='petal_length',\n    hover_data=['petal_width']\n)\n\nfig.update_layout({\n    'plot_bgcolor' : 'rgba(255, 255, 0,   0.5)',\n    'paper_bgcolor': 'rgba(0,   0,   255, 0.5)',\n})\n\nfig.show()\n\n                                                \n\n\n\n\n\n\n1 Ref\n\nhttps://community.plotly.com/t/having-a-transparent-background-in-plotly-express/30205\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Plotly",
      "Transparent bgcolor for figure"
    ]
  },
  {
    "objectID": "pages/quarto/expand_codeblock_width.html",
    "href": "pages/quarto/expand_codeblock_width.html",
    "title": "expand the width of a code block and its output",
    "section": "",
    "text": "Use this to wrap a code block to span it and its output to page width.\n\n\n::: {.column-page}\n```{.python}\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n```\n:::\n\n\n\n\n\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n\n\nshape: (5, 20)\n\n\n\nstring_idx\nstring_name\nstring_name_x\nstring_name_y\nstring_box_idx\nCB_name\nPhase\nstring_num\nstring_box_v1_x\nstring_box_v1_y\nstring_box_v2_x\nstring_box_v2_y\nstring_box_v3_x\nstring_box_v3_y\nstring_box_v4_x\nstring_box_v4_y\nnum_modules\nmodule_orientation\nnum_module_along_x\nnum_module_along_y\n\n\ni64\nstr\nf64\nf64\ni64\ni64\ni64\ni64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\ni64\nstr\ni64\ni64\n\n\n\n\n0\n\"20-9\"\n5228.161911\n724.563534\n0\n0\n0\n0\n5217.39348\n723.963534\n5238.930342\n723.963534\n5238.930342\n725.163534\n5217.39348\n725.163534\n362\n\"L\"\n10\n1\n\n\n0\n\"20-9\"\n5228.161911\n725.867048\n1\n0\n0\n0\n5217.39348\n725.267048\n5238.930342\n725.267048\n5238.930342\n726.467048\n5217.39348\n726.467048\n361\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n724.563534\n0\n0\n0\n0\n5195.874878\n723.963534\n5217.41174\n723.963534\n5217.41174\n725.163534\n5195.874878\n725.163534\n360\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n725.867048\n1\n0\n0\n0\n5195.874878\n725.267048\n5217.41174\n725.267048\n5217.41174\n726.467048\n5195.874878\n726.467048\n359\n\"L\"\n10\n1\n\n\n2\n\"20-8\"\n5228.161911\n727.170562\n0\n0\n0\n0\n5217.39348\n726.570562\n5238.930342\n726.570562\n5238.930342\n727.770562\n5217.39348\n727.770562\n358\n\"L\"\n10\n1\n\n\n\n\n\n\n\n\n\n\n\nUse it inside a code block and only its output will span page width.\n\n\n```{.python}\n#| column: page\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n```\n\n\n\n\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n\n\nshape: (5, 20)\n\n\n\nstring_idx\nstring_name\nstring_name_x\nstring_name_y\nstring_box_idx\nCB_name\nPhase\nstring_num\nstring_box_v1_x\nstring_box_v1_y\nstring_box_v2_x\nstring_box_v2_y\nstring_box_v3_x\nstring_box_v3_y\nstring_box_v4_x\nstring_box_v4_y\nnum_modules\nmodule_orientation\nnum_module_along_x\nnum_module_along_y\n\n\ni64\nstr\nf64\nf64\ni64\ni64\ni64\ni64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\ni64\nstr\ni64\ni64\n\n\n\n\n0\n\"20-9\"\n5228.161911\n724.563534\n0\n0\n0\n0\n5217.39348\n723.963534\n5238.930342\n723.963534\n5238.930342\n725.163534\n5217.39348\n725.163534\n362\n\"L\"\n10\n1\n\n\n0\n\"20-9\"\n5228.161911\n725.867048\n1\n0\n0\n0\n5217.39348\n725.267048\n5238.930342\n725.267048\n5238.930342\n726.467048\n5217.39348\n726.467048\n361\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n724.563534\n0\n0\n0\n0\n5195.874878\n723.963534\n5217.41174\n723.963534\n5217.41174\n725.163534\n5195.874878\n725.163534\n360\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n725.867048\n1\n0\n0\n0\n5195.874878\n725.267048\n5217.41174\n725.267048\n5217.41174\n726.467048\n5195.874878\n726.467048\n359\n\"L\"\n10\n1\n\n\n2\n\"20-8\"\n5228.161911\n727.170562\n0\n0\n0\n0\n5217.39348\n726.570562\n5238.930342\n726.570562\n5238.930342\n727.770562\n5217.39348\n727.770562\n358\n\"L\"\n10\n1",
    "crumbs": [
      "Home",
      "Quarto",
      "expand the width of a code block and its output"
    ]
  },
  {
    "objectID": "pages/quarto/expand_codeblock_width.html#column-page",
    "href": "pages/quarto/expand_codeblock_width.html#column-page",
    "title": "expand the width of a code block and its output",
    "section": "",
    "text": "Use this to wrap a code block to span it and its output to page width.\n\n\n::: {.column-page}\n```{.python}\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n```\n:::\n\n\n\n\n\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n\n\nshape: (5, 20)\n\n\n\nstring_idx\nstring_name\nstring_name_x\nstring_name_y\nstring_box_idx\nCB_name\nPhase\nstring_num\nstring_box_v1_x\nstring_box_v1_y\nstring_box_v2_x\nstring_box_v2_y\nstring_box_v3_x\nstring_box_v3_y\nstring_box_v4_x\nstring_box_v4_y\nnum_modules\nmodule_orientation\nnum_module_along_x\nnum_module_along_y\n\n\ni64\nstr\nf64\nf64\ni64\ni64\ni64\ni64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\ni64\nstr\ni64\ni64\n\n\n\n\n0\n\"20-9\"\n5228.161911\n724.563534\n0\n0\n0\n0\n5217.39348\n723.963534\n5238.930342\n723.963534\n5238.930342\n725.163534\n5217.39348\n725.163534\n362\n\"L\"\n10\n1\n\n\n0\n\"20-9\"\n5228.161911\n725.867048\n1\n0\n0\n0\n5217.39348\n725.267048\n5238.930342\n725.267048\n5238.930342\n726.467048\n5217.39348\n726.467048\n361\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n724.563534\n0\n0\n0\n0\n5195.874878\n723.963534\n5217.41174\n723.963534\n5217.41174\n725.163534\n5195.874878\n725.163534\n360\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n725.867048\n1\n0\n0\n0\n5195.874878\n725.267048\n5217.41174\n725.267048\n5217.41174\n726.467048\n5195.874878\n726.467048\n359\n\"L\"\n10\n1\n\n\n2\n\"20-8\"\n5228.161911\n727.170562\n0\n0\n0\n0\n5217.39348\n726.570562\n5238.930342\n726.570562\n5238.930342\n727.770562\n5217.39348\n727.770562\n358\n\"L\"\n10\n1",
    "crumbs": [
      "Home",
      "Quarto",
      "expand the width of a code block and its output"
    ]
  },
  {
    "objectID": "pages/quarto/expand_codeblock_width.html#column-page-1",
    "href": "pages/quarto/expand_codeblock_width.html#column-page-1",
    "title": "expand the width of a code block and its output",
    "section": "",
    "text": "Use it inside a code block and only its output will span page width.\n\n\n```{.python}\n#| column: page\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n```\n\n\n\n\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n\n\nshape: (5, 20)\n\n\n\nstring_idx\nstring_name\nstring_name_x\nstring_name_y\nstring_box_idx\nCB_name\nPhase\nstring_num\nstring_box_v1_x\nstring_box_v1_y\nstring_box_v2_x\nstring_box_v2_y\nstring_box_v3_x\nstring_box_v3_y\nstring_box_v4_x\nstring_box_v4_y\nnum_modules\nmodule_orientation\nnum_module_along_x\nnum_module_along_y\n\n\ni64\nstr\nf64\nf64\ni64\ni64\ni64\ni64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\ni64\nstr\ni64\ni64\n\n\n\n\n0\n\"20-9\"\n5228.161911\n724.563534\n0\n0\n0\n0\n5217.39348\n723.963534\n5238.930342\n723.963534\n5238.930342\n725.163534\n5217.39348\n725.163534\n362\n\"L\"\n10\n1\n\n\n0\n\"20-9\"\n5228.161911\n725.867048\n1\n0\n0\n0\n5217.39348\n725.267048\n5238.930342\n725.267048\n5238.930342\n726.467048\n5217.39348\n726.467048\n361\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n724.563534\n0\n0\n0\n0\n5195.874878\n723.963534\n5217.41174\n723.963534\n5217.41174\n725.163534\n5195.874878\n725.163534\n360\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n725.867048\n1\n0\n0\n0\n5195.874878\n725.267048\n5217.41174\n725.267048\n5217.41174\n726.467048\n5195.874878\n726.467048\n359\n\"L\"\n10\n1\n\n\n2\n\"20-8\"\n5228.161911\n727.170562\n0\n0\n0\n0\n5217.39348\n726.570562\n5238.930342\n726.570562\n5238.930342\n727.770562\n5217.39348\n727.770562\n358\n\"L\"\n10\n1",
    "crumbs": [
      "Home",
      "Quarto",
      "expand the width of a code block and its output"
    ]
  },
  {
    "objectID": "pages/quarto/expand_codeblock_width.html#column-screen",
    "href": "pages/quarto/expand_codeblock_width.html#column-screen",
    "title": "expand the width of a code block and its output",
    "section": "2.1 1. ::: {.column-screen}",
    "text": "2.1 1. ::: {.column-screen}\nUse it to wrap a code block to expand it and its output to full screen width.\n\n2.1.1 Syntax\n::: {.column-screen}\n```python\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n```\n:::\n\n\n2.1.2 Example\n\n\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n\n\nshape: (5, 20)\n\n\n\nstring_idx\nstring_name\nstring_name_x\nstring_name_y\nstring_box_idx\nCB_name\nPhase\nstring_num\nstring_box_v1_x\nstring_box_v1_y\nstring_box_v2_x\nstring_box_v2_y\nstring_box_v3_x\nstring_box_v3_y\nstring_box_v4_x\nstring_box_v4_y\nnum_modules\nmodule_orientation\nnum_module_along_x\nnum_module_along_y\n\n\ni64\nstr\nf64\nf64\ni64\ni64\ni64\ni64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\ni64\nstr\ni64\ni64\n\n\n\n\n0\n\"20-9\"\n5228.161911\n724.563534\n0\n0\n0\n0\n5217.39348\n723.963534\n5238.930342\n723.963534\n5238.930342\n725.163534\n5217.39348\n725.163534\n362\n\"L\"\n10\n1\n\n\n0\n\"20-9\"\n5228.161911\n725.867048\n1\n0\n0\n0\n5217.39348\n725.267048\n5238.930342\n725.267048\n5238.930342\n726.467048\n5217.39348\n726.467048\n361\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n724.563534\n0\n0\n0\n0\n5195.874878\n723.963534\n5217.41174\n723.963534\n5217.41174\n725.163534\n5195.874878\n725.163534\n360\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n725.867048\n1\n0\n0\n0\n5195.874878\n725.267048\n5217.41174\n725.267048\n5217.41174\n726.467048\n5195.874878\n726.467048\n359\n\"L\"\n10\n1\n\n\n2\n\"20-8\"\n5228.161911\n727.170562\n0\n0\n0\n0\n5217.39348\n726.570562\n5238.930342\n726.570562\n5238.930342\n727.770562\n5217.39348\n727.770562\n358\n\"L\"\n10\n1",
    "crumbs": [
      "Home",
      "Quarto",
      "expand the width of a code block and its output"
    ]
  },
  {
    "objectID": "pages/quarto/expand_codeblock_width.html#column-screen-1",
    "href": "pages/quarto/expand_codeblock_width.html#column-screen-1",
    "title": "expand the width of a code block and its output",
    "section": "2.2 2. #| column: screen",
    "text": "2.2 2. #| column: screen\nUse it inside a code block to expand only its output to full width of screen.\n\n2.2.1 Syntax\n```python\n#| column: screen\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n```\n\n\n2.2.2 Example\n\nimport polars as pl\ncsv_path = \"./data/tw_taoyuan_cankun_merged_updated.csv\"\ndf = pl.read_csv(csv_path)\ndf.head(5)\n\n\nshape: (5, 20)\n\n\n\nstring_idx\nstring_name\nstring_name_x\nstring_name_y\nstring_box_idx\nCB_name\nPhase\nstring_num\nstring_box_v1_x\nstring_box_v1_y\nstring_box_v2_x\nstring_box_v2_y\nstring_box_v3_x\nstring_box_v3_y\nstring_box_v4_x\nstring_box_v4_y\nnum_modules\nmodule_orientation\nnum_module_along_x\nnum_module_along_y\n\n\ni64\nstr\nf64\nf64\ni64\ni64\ni64\ni64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\nf64\ni64\nstr\ni64\ni64\n\n\n\n\n0\n\"20-9\"\n5228.161911\n724.563534\n0\n0\n0\n0\n5217.39348\n723.963534\n5238.930342\n723.963534\n5238.930342\n725.163534\n5217.39348\n725.163534\n362\n\"L\"\n10\n1\n\n\n0\n\"20-9\"\n5228.161911\n725.867048\n1\n0\n0\n0\n5217.39348\n725.267048\n5238.930342\n725.267048\n5238.930342\n726.467048\n5217.39348\n726.467048\n361\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n724.563534\n0\n0\n0\n0\n5195.874878\n723.963534\n5217.41174\n723.963534\n5217.41174\n725.163534\n5195.874878\n725.163534\n360\n\"L\"\n10\n1\n\n\n1\n\"21-3\"\n5206.643309\n725.867048\n1\n0\n0\n0\n5195.874878\n725.267048\n5217.41174\n725.267048\n5217.41174\n726.467048\n5195.874878\n726.467048\n359\n\"L\"\n10\n1\n\n\n2\n\"20-8\"\n5228.161911\n727.170562\n0\n0\n0\n0\n5217.39348\n726.570562\n5238.930342\n726.570562\n5238.930342\n727.770562\n5217.39348\n727.770562\n358\n\"L\"\n10\n1",
    "crumbs": [
      "Home",
      "Quarto",
      "expand the width of a code block and its output"
    ]
  },
  {
    "objectID": "pages/quarto/side_by_side_codeblock.html",
    "href": "pages/quarto/side_by_side_codeblock.html",
    "title": "side by side codeblocks and outputs",
    "section": "",
    "text": "::::{.columns .column-screen-insert .column-screen}\n\n::: column\n```python\nprint('left column')\n```\n:::\n\n::: column\n```python\nprint('right column')\n```\n:::\n\n::::\n\n\n\n\n\n\n\nimport plotly.express as px\ndf = px.data.iris() # iris is a pandas DataFrame\nfig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\")\nfig.show()\n\n                                                \n\n\n\n\n\nimport plotly.express as px\ndata_canada = px.data.gapminder().query(\"country == 'Canada'\")\nfig = px.bar(data_canada, x='year', y='pop')\nfig.show()",
    "crumbs": [
      "Home",
      "Quarto",
      "side by side codeblocks and outputs"
    ]
  },
  {
    "objectID": "pages/quarto/side_by_side_codeblock.html#syntax",
    "href": "pages/quarto/side_by_side_codeblock.html#syntax",
    "title": "side by side codeblocks and outputs",
    "section": "",
    "text": "::::{.columns .column-screen-insert .column-screen}\n\n::: column\n```python\nprint('left column')\n```\n:::\n\n::: column\n```python\nprint('right column')\n```\n:::\n\n::::",
    "crumbs": [
      "Home",
      "Quarto",
      "side by side codeblocks and outputs"
    ]
  },
  {
    "objectID": "pages/quarto/side_by_side_codeblock.html#example",
    "href": "pages/quarto/side_by_side_codeblock.html#example",
    "title": "side by side codeblocks and outputs",
    "section": "",
    "text": "import plotly.express as px\ndf = px.data.iris() # iris is a pandas DataFrame\nfig = px.scatter(df, x=\"sepal_width\", y=\"sepal_length\")\nfig.show()\n\n                                                \n\n\n\n\n\nimport plotly.express as px\ndata_canada = px.data.gapminder().query(\"country == 'Canada'\")\nfig = px.bar(data_canada, x='year', y='pop')\nfig.show()",
    "crumbs": [
      "Home",
      "Quarto",
      "side by side codeblocks and outputs"
    ]
  },
  {
    "objectID": "pages/quarto/side_by_side_codeblock.html#syntax-1",
    "href": "pages/quarto/side_by_side_codeblock.html#syntax-1",
    "title": "side by side codeblocks and outputs",
    "section": "2.1 Syntax",
    "text": "2.1 Syntax\n::::{.column-screen}\n:::{layout-ncol=\"3\"}\n\n```python\nprint('a')\n```\n\n```python\nprint('b')\n```\n\n```python\nprint('c')\n```\n\n:::\n::::",
    "crumbs": [
      "Home",
      "Quarto",
      "side by side codeblocks and outputs"
    ]
  },
  {
    "objectID": "pages/quarto/side_by_side_codeblock.html#example-1",
    "href": "pages/quarto/side_by_side_codeblock.html#example-1",
    "title": "side by side codeblocks and outputs",
    "section": "2.2 Example",
    "text": "2.2 Example\n\nprint('a')\nprint('b')\nprint('c')\n\n\n\n\na\n\n\n\n\nb\n\n\n\n\nc",
    "crumbs": [
      "Home",
      "Quarto",
      "side by side codeblocks and outputs"
    ]
  },
  {
    "objectID": "pages/quarto/side_by_side_codeblock.html#syntax-2",
    "href": "pages/quarto/side_by_side_codeblock.html#syntax-2",
    "title": "side by side codeblocks and outputs",
    "section": "3.1 Syntax",
    "text": "3.1 Syntax\n::::{.columns .column-screen}\n\n:::{.column width=\"30%\"}\n```python\nprint('a')\n```\n:::\n\n:::{.column width=\"40%\"}\n```python\nprint('b')\n```\n:::\n\n:::{.column width=\"30%\"}\n```python\nprint('c')\n```\n:::\n\n::::",
    "crumbs": [
      "Home",
      "Quarto",
      "side by side codeblocks and outputs"
    ]
  },
  {
    "objectID": "pages/quarto/side_by_side_codeblock.html#example-2",
    "href": "pages/quarto/side_by_side_codeblock.html#example-2",
    "title": "side by side codeblocks and outputs",
    "section": "3.2 Example",
    "text": "3.2 Example\n\n\n\nprint('a')\n\na\n\n\n\n\nprint('b')\n\nb\n\n\n\n\nprint('c')\n\nc",
    "crumbs": [
      "Home",
      "Quarto",
      "side by side codeblocks and outputs"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html",
    "href": "pages/rhino3dm/rhino3dm_02.html",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "import rhino3dm\nfrom dataclasses import dataclass, field\nimport random\nimport string\n\nprint('rhino3dm ver: ', rhino3dm.__version__)\n\ndef generate_id() -&gt; str:\n    return \"\".join(random.choices(string.ascii_lowercase, k=12))\n\nrhino3dm ver:  8.9.0",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#import-and-util-funcs",
    "href": "pages/rhino3dm/rhino3dm_02.html#import-and-util-funcs",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "import rhino3dm\nfrom dataclasses import dataclass, field\nimport random\nimport string\n\nprint('rhino3dm ver: ', rhino3dm.__version__)\n\ndef generate_id() -&gt; str:\n    return \"\".join(random.choices(string.ascii_lowercase, k=12))\n\nrhino3dm ver:  8.9.0",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-.3dm-file",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-.3dm-file",
    "title": "rhino3dm exercise 02",
    "section": "2 read .3dm file",
    "text": "2 read .3dm file\n\nrhino_f_path = \"./data/nongke.3dm\"\nfile3dm_obj = rhino3dm.File3dm.Read(rhino_f_path)\nprint('rhino3dm.File3dm object: ', file3dm_obj)\n\nrhino3dm.File3dm object:  &lt;rhino3dm._rhino3dm.File3dm object at 0x10913c9b0&gt;",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-notes",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-notes",
    "title": "rhino3dm exercise 02",
    "section": "3 read notes",
    "text": "3 read notes\n\nfile3dm_notes = rhino3dm.File3dm.ReadNotes(rhino_f_path).split(';')[:-1]\n\nfor idx, note in enumerate(file3dm_notes):\n    print(\n        note.strip().split(':')[0].strip(),\n        ' : ',\n        note.strip().split(':')[1].strip()\n    )\n\nname  :  nongke\nlati  :  20\nlong  :  100\n\n\n\n\n\n\n\n\n\n\nFile3dm.ReadNotes()\n\n\n\n\n\nmethod rhino3dm.File3dm.ReadNotes()\n\nReads only the notes from an existing 3dm file.\n\nParameters:\n\npath (str) – The file from which to read the notes.\n\nReturns:\n\nThe 3dm file notes.\n\nReturn type:\n\nstr",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-layer",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-layer",
    "title": "rhino3dm exercise 02",
    "section": "4 read Layer",
    "text": "4 read Layer\n\nlayer_table = file3dm_obj.Layers\nprint('layer table object: ', layer_table)\nprint('num of layers: ', len(layer_table))\nprint()\n\nfor idx, layer in enumerate(iter(layer_table)):\n    print('layer ', idx, ' Object  : ', layer)\n    print('      ', idx, ' Id      : ', layer.Id)\n    print('      ', idx, ' Index   : ', layer.Index)\n    print('      ', idx, ' Name    : ', layer.Name)\n    print('      ', idx, ' Fullpath: ', layer.FullPath)\n    print('      ', idx, ' Color   : ', layer.Color)\n    print()\n\nlayer table object:  &lt;rhino3dm._rhino3dm.File3dmLayerTable object at 0x10a914070&gt;\nnum of layers:  6\n\nlayer  0  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10a93f2b0&gt;\n       0  Id      :  212960d6-ad46-439d-8516-772ce85fde03\n       0  Index   :  0\n       0  Name    :  0\n       0  Fullpath:  0\n       0  Color   :  (0, 0, 0, 255)\n\nlayer  1  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10a8d6670&gt;\n       1  Id      :  25488de8-55a5-470b-a098-ea3c8c1220b3\n       1  Index   :  1\n       1  Name    :  ! cable\n       1  Fullpath:  ! cable\n       1  Color   :  (255, 191, 0, 255)\n\nlayer  2  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10a8f2b30&gt;\n       2  Id      :  6f40c8fc-3378-4efb-a590-0af0bf5a85dc\n       2  Index   :  2\n       2  Name    :  ! num\n       2  Fullpath:  ! num\n       2  Color   :  (0, 127, 0, 255)\n\nlayer  3  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10a8f2cf0&gt;\n       3  Id      :  4af54445-51c1-4fff-b520-54055554debc\n       3  Index   :  3\n       3  Name    :  ! num_TextDot\n       3  Fullpath:  ! num_TextDot\n       3  Color   :  (0, 127, 0, 255)\n\nlayer  4  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10a8f23f0&gt;\n       4  Id      :  0428f404-44e4-47e7-ae60-72284d0a89f7\n       4  Index   :  4\n       4  Name    :  ! pv\n       4  Fullpath:  ! pv\n       4  Color   :  (0, 0, 0, 255)\n\nlayer  5  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x10a95aff0&gt;\n       5  Id      :  c0c0bbb7-2adb-4301-8c42-c09459068132\n       5  Index   :  5\n       5  Name    :  pv_surf\n       5  Fullpath:  pv_surf\n       5  Color   :  (191, 191, 255, 255)",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-objectstable",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-objectstable",
    "title": "rhino3dm exercise 02",
    "section": "5 read ObjectsTable",
    "text": "5 read ObjectsTable\n\nobject_table = file3dm_obj.Objects\nprint('object table: ', object_table, '\\n')\n\nobject table:  &lt;rhino3dm._rhino3dm.File3dmObjectTable object at 0x106459430&gt;",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#create-dataclass-oatpv",
    "href": "pages/rhino3dm/rhino3dm_02.html#create-dataclass-oatpv",
    "title": "rhino3dm exercise 02",
    "section": "6 create dataclass OatPV",
    "text": "6 create dataclass OatPV\n\n@dataclass\nclass OatPV:\n    idx: int\n    outline: rhino3dm.PolylineCurve\n    str_num: str = ''\n    id: str = field(default_factory=generate_id)",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-pv",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-pv",
    "title": "rhino3dm exercise 02",
    "section": "7 read pv",
    "text": "7 read pv\n\nlayer_idx_of_pv = 4\ncnt_pv = 0\nmax_num_obj = 3\ntotal_num_pv = 0\n\noatPV_list = []\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_pv) and (cnt_pv &lt; max_num_obj):\n        print('object ', idx, ' Object                : ', obj)\n        print('       ', idx, ' Geometry              : ', obj.Geometry)\n        print('       ', idx, ' Attributes            : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id         : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name       : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor: ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible    : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is PolylineCurve, print its details\n        if isinstance(obj.Geometry, rhino3dm.PolylineCurve):\n            print('            curve IsClosed     :', obj.Geometry.IsClosed)\n            print('            curve IsPlanar     :', obj.Geometry.IsPlanar())\n            print('            curve IsPolyline   :', obj.Geometry.IsPolyline())\n            print()\n\n            print('            curve PointCount   :', obj.Geometry.PointCount)\n            \n            for i in range(obj.Geometry.PointCount):\n                print('            curve pt ', i, ' : ', obj.Geometry.Point(i))\n                # print('           curve pt ', i, ' : ', obj.Geometry.ToPolyline().PointAt(i)) -- alternative\n\n            print()\n\n            print('            curve SegmentCount :', obj.Geometry.ToPolyline().SegmentCount)\n\n            for i in range(obj.Geometry.ToPolyline().SegmentCount):\n                print('            segement ', i, ' : ', obj.Geometry.ToPolyline().SegmentAt(i))\n\n            print()\n\n            oatPV = OatPV(idx, obj.Geometry)\n            oatPV_list.append(oatPV)\n\n        cnt_pv += 1\n    else:\n        pass\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_pv):\n        total_num_pv += 1\n\nprint('total num of pv: ', total_num_pv)\nprint()\n\nfor idx, oatPV in enumerate(oatPV_list):\n    print('oatPV ', idx, ' : ', oatPV)\n\nobject  72  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10a99bf70&gt;\n        72  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10a908970&gt;\n        72  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10a908970&gt;\n        72  Attributes.Id         :  36f08c55-5986-4aa2-b0b8-ae56b26b043c\n        72  Attributes.Name       :  \n        72  Attributes.LayerIndex :  4\n        72  Attributes.ObjectColor:  (0, 0, 0, 255)\n        72  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  35.10614556790845,209.9589626310085,0.0\n            curve pt  1  :  35.28014104193071,210.94573999952675,0.0\n            curve pt  2  :  36.95467106254545,210.65047517688606,0.0\n            curve pt  3  :  36.78067558852319,209.6636978083678,0.0\n            curve pt  4  :  35.10614556790845,209.9589626310085,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a8d6fb0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a8d6fb0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a8d6fb0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a8d6fb0&gt;\n\nobject  73  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10a98c3b0&gt;\n        73  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10a98c370&gt;\n        73  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10a98c370&gt;\n        73  Attributes.Id         :  2a5e0e48-e0ca-4d27-896e-1d3f2435645e\n        73  Attributes.Name       :  \n        73  Attributes.LayerIndex :  4\n        73  Attributes.ObjectColor:  (0, 0, 0, 255)\n        73  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  99.74743231227566,208.92053051678556,0.0\n            curve pt  1  :  99.92142776982108,209.90730779185895,0.0\n            curve pt  2  :  101.59595209030033,209.61204397430595,0.0\n            curve pt  3  :  101.4219566327549,208.62526669923255,0.0\n            curve pt  4  :  99.74743231227566,208.92053051678556,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a98c7f0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a98c7f0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a98c7f0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a98c7f0&gt;\n\nobject  74  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10a98c9b0&gt;\n        74  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10a98c970&gt;\n        74  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10a98c970&gt;\n        74  Attributes.Id         :  56851944-a49b-49bc-af4f-44c779262974\n        74  Attributes.Name       :  \n        74  Attributes.LayerIndex :  4\n        74  Attributes.ObjectColor:  (0, 0, 0, 255)\n        74  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  91.36944042680591,198.12663899455657,0.0\n            curve pt  1  :  91.54343588435134,199.11341626962997,0.0\n            curve pt  2  :  93.21797160510158,198.81815044190162,0.0\n            curve pt  3  :  93.04397614755615,197.83137316682823,0.0\n            curve pt  4  :  91.36944042680591,198.12663899455657,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a98cdf0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a98cdf0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a98cdf0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a98cdf0&gt;\n\ntotal num of pv:  2400\n\noatPV  0  :  OatPV(idx=72, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10a8d6fb0&gt;, str_num='', id='jopfkezinoxh')\noatPV  1  :  OatPV(idx=73, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10a98c7f0&gt;, str_num='', id='ofmphzrmyulr')\noatPV  2  :  OatPV(idx=74, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10a98cdf0&gt;, str_num='', id='gdkrtribcnph')",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-cable",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-cable",
    "title": "rhino3dm exercise 02",
    "section": "8 read cable",
    "text": "8 read cable\n\nlayer_idx_of_cable = 1\ncnt_cable = 0\nmax_num_obj = 3\ntotal_num_cable = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    # print the first 3 obj on a layer\n    if (obj.Attributes.LayerIndex == layer_idx_of_cable) and (cnt_cable &lt; max_num_obj):\n        print('object ', idx, ' Object                : ', obj)\n        print('       ', idx, ' Geometry              : ', obj.Geometry)\n        print('       ', idx, ' Attributes            : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id         : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name       : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor: ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible    : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is PolylineCurve, print its details\n        if isinstance(obj.Geometry, rhino3dm.PolylineCurve):\n            print('            curve IsClosed     :', obj.Geometry.IsClosed)\n            print('            curve IsPlanar     :', obj.Geometry.IsPlanar())\n            print('            curve IsPolyline   :', obj.Geometry.IsPolyline())\n            print()\n\n            print('            curve PointCount   :', obj.Geometry.PointCount)\n            \n            for i in range(obj.Geometry.PointCount):\n                print('            curve pt ', i, ' : ', obj.Geometry.Point(i))\n                # print('           curve pt ', i, ' : ', obj.Geometry.ToPolyline().PointAt(i)) -- alternative\n\n            print()\n\n            print('            curve SegmentCount :', obj.Geometry.ToPolyline().SegmentCount)\n\n            for i in range(obj.Geometry.ToPolyline().SegmentCount):\n                print('            segement ', i, ' : ', obj.Geometry.ToPolyline().SegmentAt(i))\n\n            print()\n\n        cnt_cable += 1\n    else:\n        pass\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_cable):\n        total_num_cable += 1\n\nprint('total num of cable: ', total_num_cable)\n\nobject  0  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x106458f70&gt;\n        0  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x106454370&gt;\n        0  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x106454370&gt;\n        0  Attributes.Id         :  fa8bcce9-953e-47f0-bcfc-4de7a87e0c76\n        0  Attributes.Name       :  \n        0  Attributes.LayerIndex :  1\n        0  Attributes.ObjectColor:  (0, 0, 0, 255)\n        0  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 6\n            curve pt  0  :  14.298569362095407,251.0734261769187,0.0\n            curve pt  1  :  2.232971074135598,253.20091370662107,0.0\n            curve pt  2  :  1.9377067622771804,251.5263865827965,0.0\n            curve pt  3  :  14.003304539454732,249.398896156304,0.0\n            curve pt  4  :  13.700564187398314,247.72568133454058,0.0\n            curve pt  5  :  8.684444947408636,248.6101584950016,0.0\n\n            curve SegmentCount : 5\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106454370&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106454370&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106454370&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106454370&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106454370&gt;\n\nobject  1  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10a958570&gt;\n        1  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x106458f70&gt;\n        1  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x106458f70&gt;\n        1  Attributes.Id         :  a11caa23-6a3a-4dac-95b5-1c6005646eae\n        1  Attributes.Name       :  \n        1  Attributes.LayerIndex :  1\n        1  Attributes.ObjectColor:  (0, 0, 0, 255)\n        1  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 6\n            curve pt  0  :  7.675239846498812,248.7881056446808,0.0\n            curve pt  1  :  1.6424414370926925,249.851853712114,0.0\n            curve pt  2  :  1.3471761119082686,248.1773208414315,0.0\n            curve pt  3  :  13.412773889085692,246.04983041493904,0.0\n            curve pt  4  :  12.395163638063877,240.27867589886242,0.0\n            curve pt  5  :  1.3387704125292785,242.22821633384646,0.0\n\n            curve SegmentCount : 5\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106458f70&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106458f70&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106458f70&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106458f70&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x106458f70&gt;\n\nobject  2  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10648e8f0&gt;\n        2  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x10a958570&gt;\n        2  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10a958570&gt;\n        2  Attributes.Id         :  f2f27645-020b-4020-ab4f-369b6b5b3a71\n        2  Attributes.Name       :  \n        2  Attributes.LayerIndex :  1\n        2  Attributes.ObjectColor:  (0, 0, 0, 255)\n        2  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 7\n            curve pt  0  :  0.32956586088634054,242.40616632535492,0.0\n            curve pt  1  :  0.04480460092740657,240.7451976669099,0.0\n            curve pt  2  :  12.101217243309726,238.611623054351,0.0\n            curve pt  3  :  11.80726985994474,236.94456460314893,0.0\n            curve pt  4  :  -0.2596458508139179,239.06458065688344,0.0\n            curve pt  5  :  -0.6036829981151328,237.11344903812096,0.0\n            curve pt  6  :  3.4155472784859384,236.38933677866157,0.0\n\n            curve SegmentCount : 6\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a958570&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a958570&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a958570&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a958570&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a958570&gt;\n            segement  5  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x10a958570&gt;\n\ntotal num of cable:  72",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-text",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-text",
    "title": "rhino3dm exercise 02",
    "section": "9 read text",
    "text": "9 read text\n\nlayer_idx_of_text = 2\ncnt_text = 0\nmax_num_obj = 3\ntotal_num_text = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_text) and (cnt_text &lt; max_num_obj):\n        print('object ', idx, ' Object                  : ', obj)\n        print('       ', idx, ' Geometry                : ', obj.Geometry)\n        print('       ', idx, ' Attributes              : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id           : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name         : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex   : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor  : ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible      : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is AnnotationBase, print its PlainText\n        if isinstance(obj.Geometry, rhino3dm.AnnotationBase):\n            print('            Geometry.PlainText     : ', obj.Geometry.PlainText)\n            print()\n\n        cnt_text += 1\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_text):\n        total_num_text += 1\n\nprint('total num of text: ', total_num_text)\n\nobject  4944  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10a99bf30&gt;\n        4944  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x10a409270&gt;\n        4944  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10a409270&gt;\n        4944  Attributes.Id           :  c9b6923f-bb4c-4d0c-8407-9c230a7f9d5c\n        4944  Attributes.Name         :  \n        4944  Attributes.LayerIndex   :  2\n        4944  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4944  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  6-6-1\n\nobject  4945  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10640c130&gt;\n        4945  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x10a99bf30&gt;\n        4945  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10a99bf30&gt;\n        4945  Attributes.Id           :  cef51aca-20e2-495b-97e2-6e0e1c5b8494\n        4945  Attributes.Name         :  \n        4945  Attributes.LayerIndex   :  2\n        4945  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4945  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  1-1-1\n\nobject  4946  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x10a9912f0&gt;\n        4946  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x10640c130&gt;\n        4946  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10640c130&gt;\n        4946  Attributes.Id           :  09230350-7cef-453f-b45a-bf53ea14eb44\n        4946  Attributes.Name         :  \n        4946  Attributes.LayerIndex   :  2\n        4946  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4946  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  1-1-2\n\ntotal num of text:  72",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#create-dataclass-mypt",
    "href": "pages/rhino3dm/rhino3dm_02.html#create-dataclass-mypt",
    "title": "rhino3dm exercise 02",
    "section": "10 create dataclass MyPt",
    "text": "10 create dataclass MyPt\n\n@dataclass\nclass OatPt:\n    idx  : int\n    point: rhino3dm.Point3d\n    name : str",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-pt",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-pt",
    "title": "rhino3dm exercise 02",
    "section": "11 read pt",
    "text": "11 read pt\n# layer_idx_of_pt = 2\n# cnt_pt = 0\n# max_num_obj = 3\n# total_num_pt = 0\n#\n# oaPt_list_1 = []\n#\n# for idx, obj in enumerate(iter(object_table)):\n#     if (obj.Attributes.LayerIndex == layer_idx_of_pt) and (cnt_pt &lt; max_num_obj):\n#         print('object ', idx, ' Object                  : ', obj)\n#         print('       ', idx, ' Geometry                : ', obj.Geometry)\n#         print('       ', idx, ' Attributes              : ', obj.Attributes)\n#         print('       ', idx, ' Attributes.Id           : ', obj.Attributes.Id)\n#         print('       ', idx, ' Attributes.Name         : ', obj.Attributes.Name)\n#         print('       ', idx, ' Attributes.LayerIndex   : ', obj.Attributes.LayerIndex)\n#         print('       ', idx, ' Attributes.ObjectColor  : ', obj.Attributes.ObjectColor)\n#         print('       ', idx, ' Attributes.Visible      : ', obj.Attributes.Visible)\n#         print()\n#\n#         # if geom is Point, print its xyz\n#         if isinstance(obj.Geometry, rhino3dm.Point):\n#             pt = obj.Geometry.Location\n#             print('            Geometry.Location.X     : ', pt.X)\n#             print('            Geometry.Location.Y     : ', pt.Y)\n#             print('            Geometry.Location.Z     : ', pt.Z)\n#\n#             oatPt = OatPt(idx, pt, str(idx))\n#             oaPt_list_1.append(oatPt)\n#\n#             print()\n#\n# for idx, obj in enumerate(iter(object_table)):\n#     if (obj.Attributes.LayerIndex == layer_idx_of_pt):\n#         total_num_pt += 1\n#\n# print('total num of pt: ', total_num_pt)\n\n# for idx, oatPt in enumerate(oaPt_list_1):\n#     print('myPt', idx, ' : ', oatPt)\n#     print('    type of idx in myPt:', type(oatPt.idx))\n#     print('    type of point in myPt:', type(oatPt.point))\n#     print('    type of name in myPt:', type(oatPt.name))",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-textdot",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-textdot",
    "title": "rhino3dm exercise 02",
    "section": "12 read TextDot",
    "text": "12 read TextDot\n\nmax_num_obj = 3\ncnt_textDot = 0\ntotal_num_textDot = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    obj_geom = obj.Geometry\n    obj_attr = obj.Attributes\n\n    if (isinstance(obj_geom, rhino3dm.TextDot)) and (cnt_textDot &lt; max_num_obj):\n        print('textDot object ', idx, ' : ', obj_geom)\n        print('        position            : ', obj_geom.Point)\n        print('        text                : ', obj_geom.Text)\n        print('        Attributes object   : ', obj_attr)\n        print('        attribs.Id          : ', obj_attr.Id)\n        print('        attribs.Name        : ', obj_attr.Name)\n        print('        attribs.LayerIndex  : ', obj_attr.LayerIndex)\n        print('        attribs.ObjectColor : ', obj_attr.ObjectColor)\n        print('        attribs.Visible     : ', obj_attr.Visible)\n        print()\n\n        cnt_textDot += 1\n\nfor idx, obj in enumerate(iter(object_table)):\n    if isinstance(obj.Geometry, rhino3dm.TextDot):\n        total_num_textDot += 1\n\nprint('total num of textDot: ', total_num_textDot)\n\ntextDot object  4872  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x10a990b30&gt;\n        position            :  27.064173777436537,200.67848337106952,0.0\n        text                :  6-6-1\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10a98bc70&gt;\n        attribs.Id          :  ace09291-2363-4c79-a99d-2ae7be61531d\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntextDot object  4873  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x106459530&gt;\n        position            :  35.21171531476992,205.36180830113673,0.0\n        text                :  1-1-1\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x10a990b30&gt;\n        attribs.Id          :  b7bc5562-82b9-4119-b8ef-aa9c68ce3dee\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntextDot object  4874  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x1064588f0&gt;\n        position            :  42.1912202855743,199.72217247117237,0.0\n        text                :  1-1-2\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x106459530&gt;\n        attribs.Id          :  65b8075f-ceac-48f6-9b96-6d021fe2ad2a\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntotal num of textDot:  72",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "pages/rhino3dm/rhino3dm_02.html#read-earthanchorpoint",
    "href": "pages/rhino3dm/rhino3dm_02.html#read-earthanchorpoint",
    "title": "rhino3dm exercise 02",
    "section": "13 read EarthAnchorPoint",
    "text": "13 read EarthAnchorPoint\n\n# get the `Settings` object as a property of File3dm object\nfile3dm_settings = file3dm_obj.Settings \nprint('file3dm settings: ', file3dm_settings)\n\n# get `EarthAnchorPoint` in settings\nearthAnchorPoint = file3dm_settings.EarthAnchorPoint\nprint('EarthAnchorPoint: ', earthAnchorPoint)\nprint()\n\n# check if the earthAnchorPoint is set or not\nearthAnchorPoint_set_or_not = earthAnchorPoint.EarthLocationIsSet()\nprint('earthAnchorPoint is set: ', earthAnchorPoint_set_or_not)\n\n# get lat and lon of earthAnchorPoint\nearthAnchorPoint_lat = earthAnchorPoint.EarthBasepointLatitude\nearthAnchorPoint_lon = earthAnchorPoint.EarthBasepointLongitude\nprint('earthAnchorPoint latitude : ', earthAnchorPoint_lat)\nprint('earthAnchorPoint longitude: ', earthAnchorPoint_lon)\nprint()\n\n# get ModelBasePoint\nmodelBasePoint = earthAnchorPoint.ModelBasePoint\nprint('model base point: ', modelBasePoint)\n\n# get `ModelToEarthTransform`\nmodelUnitSystem = file3dm_settings.ModelUnitSystem\nprint('modelUnitSystem : ', modelUnitSystem)\n\nmodelToEarthTransform = earthAnchorPoint.GetModelToEarthTransform(modelUnitSystem)\nprint('modelToEarthTransform : ', modelToEarthTransform)\n\n# create a test pt\n# test_pt = rhino3dm.Point3d(91.2724, 187.784, 0)\ntest_pt = rhino3dm.Point3d(140.492,236.638,0)\ntest_pt_transformed_in_lon_lat_ele = test_pt.Transform(modelToEarthTransform)\nprint('test pt transformed in lon, lat, ele: ', test_pt_transformed_in_lon_lat_ele)\n\nfile3dm settings:  &lt;rhino3dm._rhino3dm.File3dmSettings object at 0x10a93cb70&gt;\nEarthAnchorPoint:  &lt;rhino3dm._rhino3dm.EarthAnchorPoint object at 0x10a92fdf0&gt;\n\nearthAnchorPoint is set:  True\nearthAnchorPoint latitude :  22.716611\nearthAnchorPoint longitude:  120.534701\n\nmodel base point:  1.887214762712837,254.12517650890035,0.0\nmodelUnitSystem :  UnitSystem.Meters\nmodelToEarthTransform :  &lt;rhino3dm._rhino3dm.Transform object at 0x10a90b570&gt;\ntest pt transformed in lon, lat, ele:  120.53605149715442,22.716453831047513,0.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFile3dm.Settings\n\n\n\n\n\nproperty rhino3dm.File3dm.Settings\n\nFile3dmSettings: Settings include tolerance, and unit system, and defaults used for creating views and objects.\n\nReturn: A rhino3dm.File3dm.Settings object\n\n\n\n\n\n\n\n\n\nrhino3dm.File3dmSettings\n\n\n\n\n\nclass rhino3dm.File3dm\n\nProperty:\n\nModelBasePoint\nEarthAnchorPoint\nModelUnitSystem\n\n\n\n\n\n\n\n\n\n\nrhino3dm.EarthAnchorPoint\n\n\n\n\n\nclass rhino3dm.EarthAnchorPoint\nProperty:\n\nEarthBasepointLatitude\nEarthBasepointLongitude\nModelBasePoint\nGetModelToEarthTransform(modelUnitSystem)\n\n\n\n\n\n\n\n\n\n\nSet EarthAnchorPoint in Rhino\n\n\n\n\n\ncmd Set EarthAnchorPoint in Rhino\n\n\n\n\n\n\n\n\n\nRhino to Google Earth\n\n\n\n\n\nwiki Rhino to Google Earth",
    "crumbs": [
      "Home",
      "rhino3dm",
      "rhino3dm exercise 02"
    ]
  },
  {
    "objectID": "docs/pages/polars/merge_csvs.html",
    "href": "docs/pages/polars/merge_csvs.html",
    "title": "Merge CSVs",
    "section": "",
    "text": "Merge CSVs\n\nfrom glob import glob\nimport os\n\nimport polars as pl\npl.Config(tbl_rows=10)\n\n&lt;polars.config.Config at 0x245920be650&gt;\n\n\n\n\nglob CSVs in a folder\n\ncsv_dir = \"./data/csv/\"\ncsv_path_glob = os.path.join(csv_dir, '*.csv')\ncsv_list = glob(csv_path_glob)\n\nfor idx, csv in enumerate(csv_list):\n    print('csv ', idx, ' : ', csv)\n\ncsv  0  :  ./data/csv\\cn_zone_1_04_updated.csv\ncsv  1  :  ./data/csv\\cn_zone_1_05_updated.csv\ncsv  2  :  ./data/csv\\cn_zone_1_06_updated.csv\ncsv  3  :  ./data/csv\\cn_zone_1_07_updated.csv\ncsv  4  :  ./data/csv\\cn_zone_1_08_updated.csv\n\n\n\nglob\nglob\n\n\n\nmerge CSVs into a df\n\n%%time\n\ndf_merged = pl.read_csv(csv_path_glob)\n\n# q = (\n#     pl.scan_csv(csv_path_glob)\n# )\n# df_merged = q.collect()\n\ndf_merged\n\nCPU times: total: 0 ns\nWall time: 4.98 ms"
  },
  {
    "objectID": "docs/pages/polars/edit_df_column.html",
    "href": "docs/pages/polars/edit_df_column.html",
    "title": "Edit DF Column",
    "section": "",
    "text": "Edit DF Column\n\n\nadd dummy dataframe\n\nimport polars as pl\nfrom datetime import datetime\n\ndf = pl.DataFrame(\n    {\n        \"integer\": [1, 2, 3],\n        \"date\": [\n            datetime(2025, 1, 1),\n            datetime(2025, 1, 2),\n            datetime(2025, 1, 3),\n        ],\n        \"float\": [4.0, 5.0, 6.0],\n        \"string\": [\"a\", \"b\", \"c\"],\n    }\n)\n\ndf"
  },
  {
    "objectID": "docs/docs/pages/polars/merge_csvs.out.html",
    "href": "docs/docs/pages/polars/merge_csvs.out.html",
    "title": "Merge CSVs",
    "section": "",
    "text": "Merge CSVs\n\n\nMerge CSVs\n\nfrom glob import glob\nimport os\n\nimport polars as pl\npl.Config(tbl_rows=10)\n\n&lt;polars.config.Config at 0x245920be650&gt;\n\n\n\n\nglob CSVs in a folder\n\ncsv_dir = \"./data/csv/\"\ncsv_path_glob = os.path.join(csv_dir, '*.csv')\ncsv_list = glob(csv_path_glob)\n\nfor idx, csv in enumerate(csv_list):\n    print('csv ', idx, ' : ', csv)\n\ncsv  0  :  ./data/csv\\cn_zone_1_04_updated.csv\ncsv  1  :  ./data/csv\\cn_zone_1_05_updated.csv\ncsv  2  :  ./data/csv\\cn_zone_1_06_updated.csv\ncsv  3  :  ./data/csv\\cn_zone_1_07_updated.csv\ncsv  4  :  ./data/csv\\cn_zone_1_08_updated.csv\n\n\n\nglob\nglob\n\n\n\nmerge CSVs into a df\n\n%%time\n\ndf_merged = pl.read_csv(csv_path_glob)\n\n# q = (\n#     pl.scan_csv(csv_path_glob)\n# )\n# df_merged = q.collect()\n\ndf_merged\n\nCPU times: total: 0 ns\nWall time: 4.98 ms"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "OatNotes",
    "section": "",
    "text": "This is oat’s notebook.\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "pages/polars/polars_cookbook.html",
    "href": "pages/polars/polars_cookbook.html",
    "title": "Polars Cookbook",
    "section": "",
    "text": "1 import polars\n\nimport polars as pl\n\nprint('polars ver:', pl.__version__)\n\npolars ver: 1.16.0\n\n\n\n\n2 read data\nCreate dummy df.\n\ndf = pl.DataFrame({\n    'nums': [1, 2, 3, 4, 5],\n    'letters': ['a', 'b', 'c', 'd', 'e']\n})\n\ndf.head()\n\n\nshape: (5, 2)\n\n\n\nnums\nletters\n\n\ni64\nstr\n\n\n\n\n1\n\"a\"\n\n\n2\n\"b\"\n\n\n3\n\"c\"\n\n\n4\n\"d\"\n\n\n5\n\"e\"\n\n\n\n\n\n\nRead CSV file.\n\ndf_csv = pl.read_csv('./data/titanic.csv')\n\ndf_csv.head()\n\n\nshape: (5, 8)\n\n\n\nSurvived\nPclass\nName\nSex\nAge\nSiblings/Spouses Aboard\nParents/Children Aboard\nFare\n\n\ni64\ni64\nstr\nstr\nf64\ni64\ni64\nf64\n\n\n\n\n0\n3\n\"Mr. Owen Harris Braund\"\n\"male\"\n22.0\n1\n0\n7.25\n\n\n1\n1\n\"Mrs. John Bradley (Florence Br…\n\"female\"\n38.0\n1\n0\n71.2833\n\n\n1\n3\n\"Miss. Laina Heikkinen\"\n\"female\"\n26.0\n0\n0\n7.925\n\n\n1\n1\n\"Mrs. Jacques Heath (Lily May P…\n\"female\"\n35.0\n1\n0\n53.1\n\n\n0\n3\n\"Mr. William Henry Allen\"\n\"male\"\n35.0\n0\n0\n8.05\n\n\n\n\n\n\nGet df info\n\ndf_csv.schema\n\nSchema([('Survived', Int64),\n        ('Pclass', Int64),\n        ('Name', String),\n        ('Sex', String),\n        ('Age', Float64),\n        ('Siblings/Spouses Aboard', Int64),\n        ('Parents/Children Aboard', Int64),\n        ('Fare', Float64)])\n\n\n\ndf_csv.columns\n\n['Survived',\n 'Pclass',\n 'Name',\n 'Sex',\n 'Age',\n 'Siblings/Spouses Aboard',\n 'Parents/Children Aboard',\n 'Fare']\n\n\n\ndf_csv.dtypes\n\n[Int64, Int64, String, String, Float64, Int64, Int64, Float64]\n\n\n\nprint('df shape:', df_csv.shape)\nprint('df width:', df_csv.width)\nprint('df height:', df_csv.height)\n\ndf shape: (887, 8)\ndf width: 8\ndf height: 887\n\n\n\ndf_csv.flags\n\n{'Survived': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Pclass': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Name': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Sex': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Age': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Siblings/Spouses Aboard': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Parents/Children Aboard': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Fare': {'SORTED_ASC': False, 'SORTED_DESC': False}}\n\n\nCreate df with schema\n\nimport numpy as np\n\nnumpy_arr = np.array([[1,1,1], [2,2,2]])\n\ndf = pl.from_numpy(\n    numpy_arr,\n    schema={\n        'ones': pl.Float32,\n        'twos': pl.Int8,\n    },\n    orient='col'\n)\n\ndf.head()\n\n\nshape: (3, 2)\n\n\n\nones\ntwos\n\n\nf32\ni8\n\n\n\n\n1.0\n2\n\n\n1.0\n2\n\n\n1.0\n2\n\n\n\n\n\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Polars",
      "Polars Cookbook"
    ]
  },
  {
    "objectID": "pages/polars/polars_cookbook.html#create-dummy-df.",
    "href": "pages/polars/polars_cookbook.html#create-dummy-df.",
    "title": "Polars Cookbook",
    "section": "Create dummy df.",
    "text": "Create dummy df.\n\ndf = pl.DataFrame({\n    'nums': [1, 2, 3, 4, 5],\n    'letters': ['a', 'b', 'c', 'd', 'e']\n})\n\ndf.head()\n\n\nshape: (5, 2)\n\n\n\nnums\nletters\n\n\ni64\nstr\n\n\n\n\n1\n\"a\"\n\n\n2\n\"b\"\n\n\n3\n\"c\"\n\n\n4\n\"d\"\n\n\n5\n\"e\"",
    "crumbs": [
      "Home",
      "Polars",
      "Polars Cookbook"
    ]
  },
  {
    "objectID": "pages/polars/polars_cookbook.html#read-csv-file.",
    "href": "pages/polars/polars_cookbook.html#read-csv-file.",
    "title": "Polars Cookbook",
    "section": "Read CSV file.",
    "text": "Read CSV file.\n\ndf_csv = pl.read_csv('./data/titanic.csv')\n\ndf_csv.head()\n\n\nshape: (5, 8)\n\n\n\nSurvived\nPclass\nName\nSex\nAge\nSiblings/Spouses Aboard\nParents/Children Aboard\nFare\n\n\ni64\ni64\nstr\nstr\nf64\ni64\ni64\nf64\n\n\n\n\n0\n3\n\"Mr. Owen Harris Braund\"\n\"male\"\n22.0\n1\n0\n7.25\n\n\n1\n1\n\"Mrs. John Bradley (Florence Br…\n\"female\"\n38.0\n1\n0\n71.2833\n\n\n1\n3\n\"Miss. Laina Heikkinen\"\n\"female\"\n26.0\n0\n0\n7.925\n\n\n1\n1\n\"Mrs. Jacques Heath (Lily May P…\n\"female\"\n35.0\n1\n0\n53.1\n\n\n0\n3\n\"Mr. William Henry Allen\"\n\"male\"\n35.0\n0\n0\n8.05",
    "crumbs": [
      "Home",
      "Polars",
      "Polars Cookbook"
    ]
  },
  {
    "objectID": "pages/polars/polars_cookbook.html#df-info",
    "href": "pages/polars/polars_cookbook.html#df-info",
    "title": "Polars Cookbook",
    "section": "df info",
    "text": "df info\n\ndf_csv.schema\n\nSchema([('Survived', Int64),\n        ('Pclass', Int64),\n        ('Name', String),\n        ('Sex', String),\n        ('Age', Float64),\n        ('Siblings/Spouses Aboard', Int64),\n        ('Parents/Children Aboard', Int64),\n        ('Fare', Float64)])\n\n\n\ndf_csv.columns\n\n['Survived',\n 'Pclass',\n 'Name',\n 'Sex',\n 'Age',\n 'Siblings/Spouses Aboard',\n 'Parents/Children Aboard',\n 'Fare']\n\n\n\ndf_csv.dtypes\n\n[Int64, Int64, String, String, Float64, Int64, Int64, Float64]\n\n\n\nprint('df shape:', df_csv.shape)\nprint('df width:', df_csv.width)\nprint('df height:', df_csv.height)\n\ndf shape: (887, 8)\ndf width: 8\ndf height: 887\n\n\n\ndf_csv.flags\n\n{'Survived': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Pclass': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Name': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Sex': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Age': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Siblings/Spouses Aboard': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Parents/Children Aboard': {'SORTED_ASC': False, 'SORTED_DESC': False},\n 'Fare': {'SORTED_ASC': False, 'SORTED_DESC': False}}",
    "crumbs": [
      "Home",
      "Polars",
      "Polars Cookbook"
    ]
  },
  {
    "objectID": "pages/polars/polars_cookbook.html#create-df-with-schema",
    "href": "pages/polars/polars_cookbook.html#create-df-with-schema",
    "title": "Polars Cookbook",
    "section": "create df with schema",
    "text": "create df with schema\n\nimport numpy as np\n\nnumpy_arr = np.array([[1,1,1], [2,2,2]])\n\ndf = pl.from_numpy(\n    numpy_arr,\n    schema={\n        'ones': pl.Float32,\n        'twos': pl.Int8,\n    },\n    orient='col'\n)\n\ndf.head()\n\n\nshape: (3, 2)\n\n\n\nones\ntwos\n\n\nf32\ni8\n\n\n\n\n1.0\n2\n\n\n1.0\n2\n\n\n1.0\n2",
    "crumbs": [
      "Home",
      "Polars",
      "Polars Cookbook"
    ]
  },
  {
    "objectID": "pages/polars/polars_intro.html",
    "href": "pages/polars/polars_intro.html",
    "title": "Polars Intro",
    "section": "",
    "text": "Source: polars: intro\n\n\nimport pandas as pd\nimport polars as pl\n\nprint('pandas:', pd.__version__)\nprint('polars:', pl.__version__)\n\npandas: 2.2.3\npolars: 1.16.0\n\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Polars",
      "Polars Intro"
    ]
  },
  {
    "objectID": "docs/pages/polars/polars_cookbook.html",
    "href": "docs/pages/polars/polars_cookbook.html",
    "title": "Polars Cookbook",
    "section": "",
    "text": "Polars Cookbook\n\n\nimport polars\n\nimport polars as pl\n\nprint('polars ver:', pl.__version__)\n\npolars ver: 1.7.1\n\n\n\n\nread data\nCreate dummy df.\n\ndf = pl.DataFrame({\n    'nums': [1, 2, 3, 4, 5],\n    'letters': ['a', 'b', 'c', 'd', 'e']\n})\n\ndf.head()\n\n\n\n Back to top"
  },
  {
    "objectID": "pages/shiny/test.html",
    "href": "pages/shiny/test.html",
    "title": "test dashboard",
    "section": "",
    "text": "Back to top",
    "crumbs": [
      "Home",
      "shiny",
      "test dashboard"
    ]
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "import rhino3dm\nfrom dataclasses import dataclass, field\nimport random\nimport string\n\nprint('rhino3dm ver: ', rhino3dm.__version__)\n\ndef generate_id() -&gt; str:\n    return \"\".join(random.choices(string.ascii_lowercase, k=12))\n\nrhino3dm ver:  8.9.0\n\n\n\n\n\n\nrhino_f_path = \"./data/nongke.3dm\"\nfile3dm_obj = rhino3dm.File3dm.Read(rhino_f_path)\nprint('rhino3dm.File3dm object: ', file3dm_obj)\n\nrhino3dm.File3dm object:  &lt;rhino3dm._rhino3dm.File3dm object at 0x00000213C4FBFEB0&gt;\n\n\n\n\n\n\nfile3dm_notes = rhino3dm.File3dm.ReadNotes(rhino_f_path).split(';')[:-1]\n\nfor idx, note in enumerate(file3dm_notes):\n    print(\n        note.strip().split(':')[0].strip(),\n        ' : ',\n        note.strip().split(':')[1].strip()\n    )\n\nname  :  nongke\nlati  :  20\nlong  :  100\n\n\n\nFile3dm.ReadNotes()\nmethod rhino3dm.File3dm.ReadNotes()\n\nReads only the notes from an existing 3dm file.\n\nParameters:\n\npath (str) – The file from which to read the notes.\n\nReturns:\n\nThe 3dm file notes.\n\nReturn type:\n\nstr\n\n\n\n\n\n\nlayer_table = file3dm_obj.Layers\nprint('layer table object: ', layer_table)\nprint('num of layers: ', len(layer_table))\nprint()\n\nfor idx, layer in enumerate(iter(layer_table)):\n    print('layer ', idx, ' Object  : ', layer)\n    print('      ', idx, ' Id      : ', layer.Id)\n    print('      ', idx, ' Index   : ', layer.Index)\n    print('      ', idx, ' Name    : ', layer.Name)\n    print('      ', idx, ' Fullpath: ', layer.FullPath)\n    print('      ', idx, ' Color   : ', layer.Color)\n    print()\n\nlayer table object:  &lt;rhino3dm._rhino3dm.File3dmLayerTable object at 0x00000213C4C5C370&gt;\nnum of layers:  6\n\nlayer  0  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213A3226230&gt;\n       0  Id      :  212960d6-ad46-439d-8516-772ce85fde03\n       0  Index   :  0\n       0  Name    :  0\n       0  Fullpath:  0\n       0  Color   :  (0, 0, 0, 255)\n\nlayer  1  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213A32860B0&gt;\n       1  Id      :  25488de8-55a5-470b-a098-ea3c8c1220b3\n       1  Index   :  1\n       1  Name    :  ! cable\n       1  Fullpath:  ! cable\n       1  Color   :  (255, 191, 0, 255)\n\nlayer  2  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213A3284070&gt;\n       2  Id      :  6f40c8fc-3378-4efb-a590-0af0bf5a85dc\n       2  Index   :  2\n       2  Name    :  ! num\n       2  Fullpath:  ! num\n       2  Color   :  (0, 127, 0, 255)\n\nlayer  3  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213A32869F0&gt;\n       3  Id      :  4af54445-51c1-4fff-b520-54055554debc\n       3  Index   :  3\n       3  Name    :  ! num_TextDot\n       3  Fullpath:  ! num_TextDot\n       3  Color   :  (0, 127, 0, 255)\n\nlayer  4  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213C43D4A30&gt;\n       4  Id      :  0428f404-44e4-47e7-ae60-72284d0a89f7\n       4  Index   :  4\n       4  Name    :  ! pv\n       4  Fullpath:  ! pv\n       4  Color   :  (0, 0, 0, 255)\n\nlayer  5  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213C4FD8270&gt;\n       5  Id      :  c0c0bbb7-2adb-4301-8c42-c09459068132\n       5  Index   :  5\n       5  Name    :  pv_surf\n       5  Fullpath:  pv_surf\n       5  Color   :  (191, 191, 255, 255)\n\n\n\n\n\n\nobject_table = file3dm_obj.Objects\nprint('object table: ', object_table, '\\n')\n\nobject table:  &lt;rhino3dm._rhino3dm.File3dmObjectTable object at 0x00000213A3285030&gt; \n\n\n\n\n\n\n@dataclass\nclass OatPV:\n    idx: int\n    outline: rhino3dm.PolylineCurve\n    str_num: str = ''\n    id: str = field(default_factory=generate_id)\n\n\n\n\n\nlayer_idx_of_pv = 4\ncnt_pv = 0\nmax_num_obj = 3\ntotal_num_pv = 0\n\noatPV_list = []\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_pv) and (cnt_pv &lt; max_num_obj):\n        print('object ', idx, ' Object                : ', obj)\n        print('       ', idx, ' Geometry              : ', obj.Geometry)\n        print('       ', idx, ' Attributes            : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id         : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name       : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor: ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible    : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is PolylineCurve, print its details\n        if isinstance(obj.Geometry, rhino3dm.PolylineCurve):\n            print('            curve IsClosed     :', obj.Geometry.IsClosed)\n            print('            curve IsPlanar     :', obj.Geometry.IsPlanar())\n            print('            curve IsPolyline   :', obj.Geometry.IsPolyline())\n            print()\n\n            print('            curve PointCount   :', obj.Geometry.PointCount)\n            \n            for i in range(obj.Geometry.PointCount):\n                print('            curve pt ', i, ' : ', obj.Geometry.Point(i))\n                # print('           curve pt ', i, ' : ', obj.Geometry.ToPolyline().PointAt(i)) -- alternative\n\n            print()\n\n            print('            curve SegmentCount :', obj.Geometry.ToPolyline().SegmentCount)\n\n            for i in range(obj.Geometry.ToPolyline().SegmentCount):\n                print('            segement ', i, ' : ', obj.Geometry.ToPolyline().SegmentAt(i))\n\n            print()\n\n            oatPV = OatPV(idx, obj.Geometry)\n            oatPV_list.append(oatPV)\n\n        cnt_pv += 1\n    else:\n        pass\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_pv):\n        total_num_pv += 1\n\nprint('total num of pv: ', total_num_pv)\nprint()\n\nfor idx, oatPV in enumerate(oatPV_list):\n    print('oatPV ', idx, ' : ', oatPV)\n\nobject  72  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C4FD8B30&gt;\n        72  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C4FEF7F0&gt;\n        72  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C4FEF7F0&gt;\n        72  Attributes.Id         :  36f08c55-5986-4aa2-b0b8-ae56b26b043c\n        72  Attributes.Name       :  \n        72  Attributes.LayerIndex :  4\n        72  Attributes.ObjectColor:  (0, 0, 0, 255)\n        72  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  35.10614556790845,209.9589626310085,0.0\n            curve pt  1  :  35.28014104193071,210.94573999952675,0.0\n            curve pt  2  :  36.95467106254545,210.65047517688606,0.0\n            curve pt  3  :  36.78067558852319,209.6636978083678,0.0\n            curve pt  4  :  35.10614556790845,209.9589626310085,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213A3287F70&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213A3287F70&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213A3287F70&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213A3287F70&gt;\n\nobject  73  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C5081B30&gt;\n        73  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C5081AF0&gt;\n        73  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C5081AF0&gt;\n        73  Attributes.Id         :  2a5e0e48-e0ca-4d27-896e-1d3f2435645e\n        73  Attributes.Name       :  \n        73  Attributes.LayerIndex :  4\n        73  Attributes.ObjectColor:  (0, 0, 0, 255)\n        73  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  99.74743231227566,208.92053051678556,0.0\n            curve pt  1  :  99.92142776982108,209.90730779185895,0.0\n            curve pt  2  :  101.59595209030033,209.61204397430595,0.0\n            curve pt  3  :  101.4219566327549,208.62526669923255,0.0\n            curve pt  4  :  99.74743231227566,208.92053051678556,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5081F70&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5081F70&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5081F70&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5081F70&gt;\n\nobject  74  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C5082130&gt;\n        74  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C50820F0&gt;\n        74  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C50820F0&gt;\n        74  Attributes.Id         :  56851944-a49b-49bc-af4f-44c779262974\n        74  Attributes.Name       :  \n        74  Attributes.LayerIndex :  4\n        74  Attributes.ObjectColor:  (0, 0, 0, 255)\n        74  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  91.36944042680591,198.12663899455657,0.0\n            curve pt  1  :  91.54343588435134,199.11341626962997,0.0\n            curve pt  2  :  93.21797160510158,198.81815044190162,0.0\n            curve pt  3  :  93.04397614755615,197.83137316682823,0.0\n            curve pt  4  :  91.36944042680591,198.12663899455657,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5082570&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5082570&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5082570&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5082570&gt;\n\ntotal num of pv:  2400\n\noatPV  0  :  OatPV(idx=72, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213A3287F70&gt;, str_num='', id='tojamshiytug')\noatPV  1  :  OatPV(idx=73, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C5081F70&gt;, str_num='', id='sghwnyeskzdv')\noatPV  2  :  OatPV(idx=74, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C5082570&gt;, str_num='', id='aaumibtcpqmk')\n\n\n\n\n\n\nlayer_idx_of_cable = 1\ncnt_cable = 0\nmax_num_obj = 3\ntotal_num_cable = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    # print the first 3 obj on a layer\n    if (obj.Attributes.LayerIndex == layer_idx_of_cable) and (cnt_cable &lt; max_num_obj):\n        print('object ', idx, ' Object                : ', obj)\n        print('       ', idx, ' Geometry              : ', obj.Geometry)\n        print('       ', idx, ' Attributes            : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id         : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name       : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor: ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible    : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is PolylineCurve, print its details\n        if isinstance(obj.Geometry, rhino3dm.PolylineCurve):\n            print('            curve IsClosed     :', obj.Geometry.IsClosed)\n            print('            curve IsPlanar     :', obj.Geometry.IsPlanar())\n            print('            curve IsPolyline   :', obj.Geometry.IsPolyline())\n            print()\n\n            print('            curve PointCount   :', obj.Geometry.PointCount)\n            \n            for i in range(obj.Geometry.PointCount):\n                print('            curve pt ', i, ' : ', obj.Geometry.Point(i))\n                # print('           curve pt ', i, ' : ', obj.Geometry.ToPolyline().PointAt(i)) -- alternative\n\n            print()\n\n            print('            curve SegmentCount :', obj.Geometry.ToPolyline().SegmentCount)\n\n            for i in range(obj.Geometry.ToPolyline().SegmentCount):\n                print('            segement ', i, ' : ', obj.Geometry.ToPolyline().SegmentAt(i))\n\n            print()\n\n        cnt_cable += 1\n    else:\n        pass\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_cable):\n        total_num_cable += 1\n\nprint('total num of cable: ', total_num_cable)\n\nobject  0  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C4FBC9B0&gt;\n        0  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C505B6B0&gt;\n        0  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C505B6B0&gt;\n        0  Attributes.Id         :  fa8bcce9-953e-47f0-bcfc-4de7a87e0c76\n        0  Attributes.Name       :  \n        0  Attributes.LayerIndex :  1\n        0  Attributes.ObjectColor:  (0, 0, 0, 255)\n        0  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 6\n            curve pt  0  :  14.298569362095407,251.0734261769187,0.0\n            curve pt  1  :  2.232971074135598,253.20091370662107,0.0\n            curve pt  2  :  1.9377067622771804,251.5263865827965,0.0\n            curve pt  3  :  14.003304539454732,249.398896156304,0.0\n            curve pt  4  :  13.700564187398314,247.72568133454058,0.0\n            curve pt  5  :  8.684444947408636,248.6101584950016,0.0\n\n            curve SegmentCount : 5\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n\nobject  1  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C505B6B0&gt;\n        1  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C4FBC9B0&gt;\n        1  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C4FBC9B0&gt;\n        1  Attributes.Id         :  a11caa23-6a3a-4dac-95b5-1c6005646eae\n        1  Attributes.Name       :  \n        1  Attributes.LayerIndex :  1\n        1  Attributes.ObjectColor:  (0, 0, 0, 255)\n        1  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 6\n            curve pt  0  :  7.675239846498812,248.7881056446808,0.0\n            curve pt  1  :  1.6424414370926925,249.851853712114,0.0\n            curve pt  2  :  1.3471761119082686,248.1773208414315,0.0\n            curve pt  3  :  13.412773889085692,246.04983041493904,0.0\n            curve pt  4  :  12.395163638063877,240.27867589886242,0.0\n            curve pt  5  :  1.3387704125292785,242.22821633384646,0.0\n\n            curve SegmentCount : 5\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n\nobject  2  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C5081970&gt;\n        2  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C505B6B0&gt;\n        2  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C505B6B0&gt;\n        2  Attributes.Id         :  f2f27645-020b-4020-ab4f-369b6b5b3a71\n        2  Attributes.Name       :  \n        2  Attributes.LayerIndex :  1\n        2  Attributes.ObjectColor:  (0, 0, 0, 255)\n        2  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 7\n            curve pt  0  :  0.32956586088634054,242.40616632535492,0.0\n            curve pt  1  :  0.04480460092740657,240.7451976669099,0.0\n            curve pt  2  :  12.101217243309726,238.611623054351,0.0\n            curve pt  3  :  11.80726985994474,236.94456460314893,0.0\n            curve pt  4  :  -0.2596458508139179,239.06458065688344,0.0\n            curve pt  5  :  -0.6036829981151328,237.11344903812096,0.0\n            curve pt  6  :  3.4155472784859384,236.38933677866157,0.0\n\n            curve SegmentCount : 6\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  5  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n\ntotal num of cable:  72\n\n\n\n\n\n\nlayer_idx_of_text = 2\ncnt_text = 0\nmax_num_obj = 3\ntotal_num_text = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_text) and (cnt_text &lt; max_num_obj):\n        print('object ', idx, ' Object                  : ', obj)\n        print('       ', idx, ' Geometry                : ', obj.Geometry)\n        print('       ', idx, ' Attributes              : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id           : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name         : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex   : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor  : ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible      : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is AnnotationBase, print its PlainText\n        if isinstance(obj.Geometry, rhino3dm.AnnotationBase):\n            print('            Geometry.PlainText     : ', obj.Geometry.PlainText)\n            print()\n\n        cnt_text += 1\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_text):\n        total_num_text += 1\n\nprint('total num of text: ', total_num_text)\n\nobject  4944  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213A3231FF0&gt;\n        4944  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x00000213A3232DF0&gt;\n        4944  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213A3232DF0&gt;\n        4944  Attributes.Id           :  c9b6923f-bb4c-4d0c-8407-9c230a7f9d5c\n        4944  Attributes.Name         :  \n        4944  Attributes.LayerIndex   :  2\n        4944  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4944  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  6-6-1\n\nobject  4945  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213A32339F0&gt;\n        4945  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x00000213A3231FF0&gt;\n        4945  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213A3231FF0&gt;\n        4945  Attributes.Id           :  cef51aca-20e2-495b-97e2-6e0e1c5b8494\n        4945  Attributes.Name         :  \n        4945  Attributes.LayerIndex   :  2\n        4945  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4945  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  1-1-1\n\nobject  4946  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C4FD9970&gt;\n        4946  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x00000213A32339F0&gt;\n        4946  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213A32339F0&gt;\n        4946  Attributes.Id           :  09230350-7cef-453f-b45a-bf53ea14eb44\n        4946  Attributes.Name         :  \n        4946  Attributes.LayerIndex   :  2\n        4946  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4946  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  1-1-2\n\ntotal num of text:  72\n\n\n\n\n\n\n@dataclass\nclass OatPt:\n    idx  : int\n    point: rhino3dm.Point3d\n    name : str\n\n\n\n\n# layer_idx_of_pt = 2\n# cnt_pt = 0\n# max_num_obj = 3\n# total_num_pt = 0\n#\n# oaPt_list_1 = []\n#\n# for idx, obj in enumerate(iter(object_table)):\n#     if (obj.Attributes.LayerIndex == layer_idx_of_pt) and (cnt_pt &lt; max_num_obj):\n#         print('object ', idx, ' Object                  : ', obj)\n#         print('       ', idx, ' Geometry                : ', obj.Geometry)\n#         print('       ', idx, ' Attributes              : ', obj.Attributes)\n#         print('       ', idx, ' Attributes.Id           : ', obj.Attributes.Id)\n#         print('       ', idx, ' Attributes.Name         : ', obj.Attributes.Name)\n#         print('       ', idx, ' Attributes.LayerIndex   : ', obj.Attributes.LayerIndex)\n#         print('       ', idx, ' Attributes.ObjectColor  : ', obj.Attributes.ObjectColor)\n#         print('       ', idx, ' Attributes.Visible      : ', obj.Attributes.Visible)\n#         print()\n#\n#         # if geom is Point, print its xyz\n#         if isinstance(obj.Geometry, rhino3dm.Point):\n#             pt = obj.Geometry.Location\n#             print('            Geometry.Location.X     : ', pt.X)\n#             print('            Geometry.Location.Y     : ', pt.Y)\n#             print('            Geometry.Location.Z     : ', pt.Z)\n#\n#             oatPt = OatPt(idx, pt, str(idx))\n#             oaPt_list_1.append(oatPt)\n#\n#             print()\n#\n# for idx, obj in enumerate(iter(object_table)):\n#     if (obj.Attributes.LayerIndex == layer_idx_of_pt):\n#         total_num_pt += 1\n#\n# print('total num of pt: ', total_num_pt)\n\n# for idx, oatPt in enumerate(oaPt_list_1):\n#     print('myPt', idx, ' : ', oatPt)\n#     print('    type of idx in myPt:', type(oatPt.idx))\n#     print('    type of point in myPt:', type(oatPt.point))\n#     print('    type of name in myPt:', type(oatPt.name))\n\n\n\n\n\nmax_num_obj = 3\ncnt_textDot = 0\ntotal_num_textDot = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    obj_geom = obj.Geometry\n    obj_attr = obj.Attributes\n\n    if (isinstance(obj_geom, rhino3dm.TextDot)) and (cnt_textDot &lt; max_num_obj):\n        print('textDot object ', idx, ' : ', obj_geom)\n        print('        position            : ', obj_geom.Point)\n        print('        text                : ', obj_geom.Text)\n        print('        Attributes object   : ', obj_attr)\n        print('        attribs.Id          : ', obj_attr.Id)\n        print('        attribs.Name        : ', obj_attr.Name)\n        print('        attribs.LayerIndex  : ', obj_attr.LayerIndex)\n        print('        attribs.ObjectColor : ', obj_attr.ObjectColor)\n        print('        attribs.Visible     : ', obj_attr.Visible)\n        print()\n\n        cnt_textDot += 1\n\nfor idx, obj in enumerate(iter(object_table)):\n    if isinstance(obj.Geometry, rhino3dm.TextDot):\n        total_num_textDot += 1\n\nprint('total num of textDot: ', total_num_textDot)\n\ntextDot object  4872  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x00000213A32310B0&gt;\n        position            :  27.064173777436537,200.67848337106952,0.0\n        text                :  6-6-1\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C50765F0&gt;\n        attribs.Id          :  ace09291-2363-4c79-a99d-2ae7be61531d\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntextDot object  4873  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x00000213C50761B0&gt;\n        position            :  35.21171531476992,205.36180830113673,0.0\n        text                :  1-1-1\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213A32310B0&gt;\n        attribs.Id          :  b7bc5562-82b9-4119-b8ef-aa9c68ce3dee\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntextDot object  4874  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x00000213C5077C30&gt;\n        position            :  42.1912202855743,199.72217247117237,0.0\n        text                :  1-1-2\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C50761B0&gt;\n        attribs.Id          :  65b8075f-ceac-48f6-9b96-6d021fe2ad2a\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntotal num of textDot:  72\n\n\n\n\n\n\n# get the `Settings` object as a property of File3dm object\nfile3dm_settings = file3dm_obj.Settings \nprint('file3dm settings: ', file3dm_settings)\n\n# get `EarthAnchorPoint` in settings\nearthAnchorPoint = file3dm_settings.EarthAnchorPoint\nprint('EarthAnchorPoint: ', earthAnchorPoint)\nprint()\n\n# check if the earthAnchorPoint is set or not\nearthAnchorPoint_set_or_not = earthAnchorPoint.EarthLocationIsSet()\nprint('earthAnchorPoint is set: ', earthAnchorPoint_set_or_not)\n\n# get lat and lon of earthAnchorPoint\nearthAnchorPoint_lat = earthAnchorPoint.EarthBasepointLatitude\nearthAnchorPoint_lon = earthAnchorPoint.EarthBasepointLongitude\nprint('earthAnchorPoint latitude : ', earthAnchorPoint_lat)\nprint('earthAnchorPoint longitude: ', earthAnchorPoint_lon)\nprint()\n\n# get ModelBasePoint\nmodelBasePoint = earthAnchorPoint.ModelBasePoint\nprint('model base point: ', modelBasePoint)\n\n# get `ModelToEarthTransform`\nmodelUnitSystem = file3dm_settings.ModelUnitSystem\nprint('modelUnitSystem : ', modelUnitSystem)\n\nmodelToEarthTransform = earthAnchorPoint.GetModelToEarthTransform(modelUnitSystem)\nprint('modelToEarthTransform : ', modelToEarthTransform)\n\n# create a test pt\n# test_pt = rhino3dm.Point3d(91.2724, 187.784, 0)\ntest_pt = rhino3dm.Point3d(140.492,236.638,0)\ntest_pt_transformed_in_lon_lat_ele = test_pt.Transform(modelToEarthTransform)\nprint('test pt transformed in lon, lat, ele: ', test_pt_transformed_in_lon_lat_ele)\n\nfile3dm settings:  &lt;rhino3dm._rhino3dm.File3dmSettings object at 0x00000213C4FD6C30&gt;\nEarthAnchorPoint:  &lt;rhino3dm._rhino3dm.EarthAnchorPoint object at 0x00000213C5004870&gt;\n\nearthAnchorPoint is set:  True\nearthAnchorPoint latitude :  22.716611\nearthAnchorPoint longitude:  120.534701\n\nmodel base point:  1.887214762712837,254.12517650890035,0.0\nmodelUnitSystem :  UnitSystem.Meters\nmodelToEarthTransform :  &lt;rhino3dm._rhino3dm.Transform object at 0x00000213C4FD9970&gt;\ntest pt transformed in lon, lat, ele:  120.53605149715442,22.716453831047513,0.0\n\n\n\nFile3dm.Settings\nproperty rhino3dm.File3dm.Settings\n\nFile3dmSettings: Settings include tolerance, and unit system, and defaults used for creating views and objects.\n\nReturn: A rhino3dm.File3dm.Settings object\n\n\nrhino3dm.File3dmSettings\nclass rhino3dm.File3dm\n\nProperty:\n\nModelBasePoint\nEarthAnchorPoint\nModelUnitSystem\n\n\n\nrhino3dm.EarthAnchorPoint\nclass rhino3dm.EarthAnchorPoint\nProperty:\n\nEarthBasepointLatitude\nEarthBasepointLongitude\nModelBasePoint\nGetModelToEarthTransform(modelUnitSystem)\n\n\n\nSet EarthAnchorPoint in Rhino\ncmd Set EarthAnchorPoint in Rhino\n\n\nRhino to Google Earth\nwiki Rhino to Google Earth"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#import-and-util-funcs",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#import-and-util-funcs",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "import rhino3dm\nfrom dataclasses import dataclass, field\nimport random\nimport string\n\nprint('rhino3dm ver: ', rhino3dm.__version__)\n\ndef generate_id() -&gt; str:\n    return \"\".join(random.choices(string.ascii_lowercase, k=12))\n\nrhino3dm ver:  8.9.0"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-.3dm-file",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-.3dm-file",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "rhino_f_path = \"./data/nongke.3dm\"\nfile3dm_obj = rhino3dm.File3dm.Read(rhino_f_path)\nprint('rhino3dm.File3dm object: ', file3dm_obj)\n\nrhino3dm.File3dm object:  &lt;rhino3dm._rhino3dm.File3dm object at 0x00000213C4FBFEB0&gt;"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-notes",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-notes",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "file3dm_notes = rhino3dm.File3dm.ReadNotes(rhino_f_path).split(';')[:-1]\n\nfor idx, note in enumerate(file3dm_notes):\n    print(\n        note.strip().split(':')[0].strip(),\n        ' : ',\n        note.strip().split(':')[1].strip()\n    )\n\nname  :  nongke\nlati  :  20\nlong  :  100\n\n\n\nFile3dm.ReadNotes()\nmethod rhino3dm.File3dm.ReadNotes()\n\nReads only the notes from an existing 3dm file.\n\nParameters:\n\npath (str) – The file from which to read the notes.\n\nReturns:\n\nThe 3dm file notes.\n\nReturn type:\n\nstr"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-layer",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-layer",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "layer_table = file3dm_obj.Layers\nprint('layer table object: ', layer_table)\nprint('num of layers: ', len(layer_table))\nprint()\n\nfor idx, layer in enumerate(iter(layer_table)):\n    print('layer ', idx, ' Object  : ', layer)\n    print('      ', idx, ' Id      : ', layer.Id)\n    print('      ', idx, ' Index   : ', layer.Index)\n    print('      ', idx, ' Name    : ', layer.Name)\n    print('      ', idx, ' Fullpath: ', layer.FullPath)\n    print('      ', idx, ' Color   : ', layer.Color)\n    print()\n\nlayer table object:  &lt;rhino3dm._rhino3dm.File3dmLayerTable object at 0x00000213C4C5C370&gt;\nnum of layers:  6\n\nlayer  0  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213A3226230&gt;\n       0  Id      :  212960d6-ad46-439d-8516-772ce85fde03\n       0  Index   :  0\n       0  Name    :  0\n       0  Fullpath:  0\n       0  Color   :  (0, 0, 0, 255)\n\nlayer  1  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213A32860B0&gt;\n       1  Id      :  25488de8-55a5-470b-a098-ea3c8c1220b3\n       1  Index   :  1\n       1  Name    :  ! cable\n       1  Fullpath:  ! cable\n       1  Color   :  (255, 191, 0, 255)\n\nlayer  2  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213A3284070&gt;\n       2  Id      :  6f40c8fc-3378-4efb-a590-0af0bf5a85dc\n       2  Index   :  2\n       2  Name    :  ! num\n       2  Fullpath:  ! num\n       2  Color   :  (0, 127, 0, 255)\n\nlayer  3  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213A32869F0&gt;\n       3  Id      :  4af54445-51c1-4fff-b520-54055554debc\n       3  Index   :  3\n       3  Name    :  ! num_TextDot\n       3  Fullpath:  ! num_TextDot\n       3  Color   :  (0, 127, 0, 255)\n\nlayer  4  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213C43D4A30&gt;\n       4  Id      :  0428f404-44e4-47e7-ae60-72284d0a89f7\n       4  Index   :  4\n       4  Name    :  ! pv\n       4  Fullpath:  ! pv\n       4  Color   :  (0, 0, 0, 255)\n\nlayer  5  Object  :  &lt;rhino3dm._rhino3dm.Layer object at 0x00000213C4FD8270&gt;\n       5  Id      :  c0c0bbb7-2adb-4301-8c42-c09459068132\n       5  Index   :  5\n       5  Name    :  pv_surf\n       5  Fullpath:  pv_surf\n       5  Color   :  (191, 191, 255, 255)"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-objectstable",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-objectstable",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "object_table = file3dm_obj.Objects\nprint('object table: ', object_table, '\\n')\n\nobject table:  &lt;rhino3dm._rhino3dm.File3dmObjectTable object at 0x00000213A3285030&gt;"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#create-dataclass-oatpv",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#create-dataclass-oatpv",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "@dataclass\nclass OatPV:\n    idx: int\n    outline: rhino3dm.PolylineCurve\n    str_num: str = ''\n    id: str = field(default_factory=generate_id)"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-pv",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-pv",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "layer_idx_of_pv = 4\ncnt_pv = 0\nmax_num_obj = 3\ntotal_num_pv = 0\n\noatPV_list = []\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_pv) and (cnt_pv &lt; max_num_obj):\n        print('object ', idx, ' Object                : ', obj)\n        print('       ', idx, ' Geometry              : ', obj.Geometry)\n        print('       ', idx, ' Attributes            : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id         : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name       : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor: ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible    : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is PolylineCurve, print its details\n        if isinstance(obj.Geometry, rhino3dm.PolylineCurve):\n            print('            curve IsClosed     :', obj.Geometry.IsClosed)\n            print('            curve IsPlanar     :', obj.Geometry.IsPlanar())\n            print('            curve IsPolyline   :', obj.Geometry.IsPolyline())\n            print()\n\n            print('            curve PointCount   :', obj.Geometry.PointCount)\n            \n            for i in range(obj.Geometry.PointCount):\n                print('            curve pt ', i, ' : ', obj.Geometry.Point(i))\n                # print('           curve pt ', i, ' : ', obj.Geometry.ToPolyline().PointAt(i)) -- alternative\n\n            print()\n\n            print('            curve SegmentCount :', obj.Geometry.ToPolyline().SegmentCount)\n\n            for i in range(obj.Geometry.ToPolyline().SegmentCount):\n                print('            segement ', i, ' : ', obj.Geometry.ToPolyline().SegmentAt(i))\n\n            print()\n\n            oatPV = OatPV(idx, obj.Geometry)\n            oatPV_list.append(oatPV)\n\n        cnt_pv += 1\n    else:\n        pass\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_pv):\n        total_num_pv += 1\n\nprint('total num of pv: ', total_num_pv)\nprint()\n\nfor idx, oatPV in enumerate(oatPV_list):\n    print('oatPV ', idx, ' : ', oatPV)\n\nobject  72  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C4FD8B30&gt;\n        72  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C4FEF7F0&gt;\n        72  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C4FEF7F0&gt;\n        72  Attributes.Id         :  36f08c55-5986-4aa2-b0b8-ae56b26b043c\n        72  Attributes.Name       :  \n        72  Attributes.LayerIndex :  4\n        72  Attributes.ObjectColor:  (0, 0, 0, 255)\n        72  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  35.10614556790845,209.9589626310085,0.0\n            curve pt  1  :  35.28014104193071,210.94573999952675,0.0\n            curve pt  2  :  36.95467106254545,210.65047517688606,0.0\n            curve pt  3  :  36.78067558852319,209.6636978083678,0.0\n            curve pt  4  :  35.10614556790845,209.9589626310085,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213A3287F70&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213A3287F70&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213A3287F70&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213A3287F70&gt;\n\nobject  73  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C5081B30&gt;\n        73  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C5081AF0&gt;\n        73  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C5081AF0&gt;\n        73  Attributes.Id         :  2a5e0e48-e0ca-4d27-896e-1d3f2435645e\n        73  Attributes.Name       :  \n        73  Attributes.LayerIndex :  4\n        73  Attributes.ObjectColor:  (0, 0, 0, 255)\n        73  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  99.74743231227566,208.92053051678556,0.0\n            curve pt  1  :  99.92142776982108,209.90730779185895,0.0\n            curve pt  2  :  101.59595209030033,209.61204397430595,0.0\n            curve pt  3  :  101.4219566327549,208.62526669923255,0.0\n            curve pt  4  :  99.74743231227566,208.92053051678556,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5081F70&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5081F70&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5081F70&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5081F70&gt;\n\nobject  74  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C5082130&gt;\n        74  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C50820F0&gt;\n        74  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C50820F0&gt;\n        74  Attributes.Id         :  56851944-a49b-49bc-af4f-44c779262974\n        74  Attributes.Name       :  \n        74  Attributes.LayerIndex :  4\n        74  Attributes.ObjectColor:  (0, 0, 0, 255)\n        74  Attributes.Visible    :  True\n\n            curve IsClosed     : True\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 5\n            curve pt  0  :  91.36944042680591,198.12663899455657,0.0\n            curve pt  1  :  91.54343588435134,199.11341626962997,0.0\n            curve pt  2  :  93.21797160510158,198.81815044190162,0.0\n            curve pt  3  :  93.04397614755615,197.83137316682823,0.0\n            curve pt  4  :  91.36944042680591,198.12663899455657,0.0\n\n            curve SegmentCount : 4\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5082570&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5082570&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5082570&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5082570&gt;\n\ntotal num of pv:  2400\n\noatPV  0  :  OatPV(idx=72, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213A3287F70&gt;, str_num='', id='tojamshiytug')\noatPV  1  :  OatPV(idx=73, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C5081F70&gt;, str_num='', id='sghwnyeskzdv')\noatPV  2  :  OatPV(idx=74, outline=&lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C5082570&gt;, str_num='', id='aaumibtcpqmk')"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-cable",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-cable",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "layer_idx_of_cable = 1\ncnt_cable = 0\nmax_num_obj = 3\ntotal_num_cable = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    # print the first 3 obj on a layer\n    if (obj.Attributes.LayerIndex == layer_idx_of_cable) and (cnt_cable &lt; max_num_obj):\n        print('object ', idx, ' Object                : ', obj)\n        print('       ', idx, ' Geometry              : ', obj.Geometry)\n        print('       ', idx, ' Attributes            : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id         : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name       : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor: ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible    : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is PolylineCurve, print its details\n        if isinstance(obj.Geometry, rhino3dm.PolylineCurve):\n            print('            curve IsClosed     :', obj.Geometry.IsClosed)\n            print('            curve IsPlanar     :', obj.Geometry.IsPlanar())\n            print('            curve IsPolyline   :', obj.Geometry.IsPolyline())\n            print()\n\n            print('            curve PointCount   :', obj.Geometry.PointCount)\n            \n            for i in range(obj.Geometry.PointCount):\n                print('            curve pt ', i, ' : ', obj.Geometry.Point(i))\n                # print('           curve pt ', i, ' : ', obj.Geometry.ToPolyline().PointAt(i)) -- alternative\n\n            print()\n\n            print('            curve SegmentCount :', obj.Geometry.ToPolyline().SegmentCount)\n\n            for i in range(obj.Geometry.ToPolyline().SegmentCount):\n                print('            segement ', i, ' : ', obj.Geometry.ToPolyline().SegmentAt(i))\n\n            print()\n\n        cnt_cable += 1\n    else:\n        pass\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_cable):\n        total_num_cable += 1\n\nprint('total num of cable: ', total_num_cable)\n\nobject  0  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C4FBC9B0&gt;\n        0  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C505B6B0&gt;\n        0  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C505B6B0&gt;\n        0  Attributes.Id         :  fa8bcce9-953e-47f0-bcfc-4de7a87e0c76\n        0  Attributes.Name       :  \n        0  Attributes.LayerIndex :  1\n        0  Attributes.ObjectColor:  (0, 0, 0, 255)\n        0  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 6\n            curve pt  0  :  14.298569362095407,251.0734261769187,0.0\n            curve pt  1  :  2.232971074135598,253.20091370662107,0.0\n            curve pt  2  :  1.9377067622771804,251.5263865827965,0.0\n            curve pt  3  :  14.003304539454732,249.398896156304,0.0\n            curve pt  4  :  13.700564187398314,247.72568133454058,0.0\n            curve pt  5  :  8.684444947408636,248.6101584950016,0.0\n\n            curve SegmentCount : 5\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C5005EF0&gt;\n\nobject  1  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C505B6B0&gt;\n        1  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C4FBC9B0&gt;\n        1  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C4FBC9B0&gt;\n        1  Attributes.Id         :  a11caa23-6a3a-4dac-95b5-1c6005646eae\n        1  Attributes.Name       :  \n        1  Attributes.LayerIndex :  1\n        1  Attributes.ObjectColor:  (0, 0, 0, 255)\n        1  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 6\n            curve pt  0  :  7.675239846498812,248.7881056446808,0.0\n            curve pt  1  :  1.6424414370926925,249.851853712114,0.0\n            curve pt  2  :  1.3471761119082686,248.1773208414315,0.0\n            curve pt  3  :  13.412773889085692,246.04983041493904,0.0\n            curve pt  4  :  12.395163638063877,240.27867589886242,0.0\n            curve pt  5  :  1.3387704125292785,242.22821633384646,0.0\n\n            curve SegmentCount : 5\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C4FD41F0&gt;\n\nobject  2  Object                :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C5081970&gt;\n        2  Geometry              :  &lt;rhino3dm._rhino3dm.PolylineCurve object at 0x00000213C505B6B0&gt;\n        2  Attributes            :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C505B6B0&gt;\n        2  Attributes.Id         :  f2f27645-020b-4020-ab4f-369b6b5b3a71\n        2  Attributes.Name       :  \n        2  Attributes.LayerIndex :  1\n        2  Attributes.ObjectColor:  (0, 0, 0, 255)\n        2  Attributes.Visible    :  True\n\n            curve IsClosed     : False\n            curve IsPlanar     : True\n            curve IsPolyline   : True\n\n            curve PointCount   : 7\n            curve pt  0  :  0.32956586088634054,242.40616632535492,0.0\n            curve pt  1  :  0.04480460092740657,240.7451976669099,0.0\n            curve pt  2  :  12.101217243309726,238.611623054351,0.0\n            curve pt  3  :  11.80726985994474,236.94456460314893,0.0\n            curve pt  4  :  -0.2596458508139179,239.06458065688344,0.0\n            curve pt  5  :  -0.6036829981151328,237.11344903812096,0.0\n            curve pt  6  :  3.4155472784859384,236.38933677866157,0.0\n\n            curve SegmentCount : 6\n            segement  0  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  1  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  2  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  3  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  4  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n            segement  5  :  &lt;rhino3dm._rhino3dm.LineCurve object at 0x00000213C505B6B0&gt;\n\ntotal num of cable:  72"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-text",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-text",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "layer_idx_of_text = 2\ncnt_text = 0\nmax_num_obj = 3\ntotal_num_text = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_text) and (cnt_text &lt; max_num_obj):\n        print('object ', idx, ' Object                  : ', obj)\n        print('       ', idx, ' Geometry                : ', obj.Geometry)\n        print('       ', idx, ' Attributes              : ', obj.Attributes)\n        print('       ', idx, ' Attributes.Id           : ', obj.Attributes.Id)\n        print('       ', idx, ' Attributes.Name         : ', obj.Attributes.Name)\n        print('       ', idx, ' Attributes.LayerIndex   : ', obj.Attributes.LayerIndex)\n        print('       ', idx, ' Attributes.ObjectColor  : ', obj.Attributes.ObjectColor)\n        print('       ', idx, ' Attributes.Visible      : ', obj.Attributes.Visible)\n        print()\n\n        # if geom is AnnotationBase, print its PlainText\n        if isinstance(obj.Geometry, rhino3dm.AnnotationBase):\n            print('            Geometry.PlainText     : ', obj.Geometry.PlainText)\n            print()\n\n        cnt_text += 1\n\nfor idx, obj in enumerate(iter(object_table)):\n    if (obj.Attributes.LayerIndex == layer_idx_of_text):\n        total_num_text += 1\n\nprint('total num of text: ', total_num_text)\n\nobject  4944  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213A3231FF0&gt;\n        4944  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x00000213A3232DF0&gt;\n        4944  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213A3232DF0&gt;\n        4944  Attributes.Id           :  c9b6923f-bb4c-4d0c-8407-9c230a7f9d5c\n        4944  Attributes.Name         :  \n        4944  Attributes.LayerIndex   :  2\n        4944  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4944  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  6-6-1\n\nobject  4945  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213A32339F0&gt;\n        4945  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x00000213A3231FF0&gt;\n        4945  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213A3231FF0&gt;\n        4945  Attributes.Id           :  cef51aca-20e2-495b-97e2-6e0e1c5b8494\n        4945  Attributes.Name         :  \n        4945  Attributes.LayerIndex   :  2\n        4945  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4945  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  1-1-1\n\nobject  4946  Object                  :  &lt;rhino3dm._rhino3dm.File3dmObject object at 0x00000213C4FD9970&gt;\n        4946  Geometry                :  &lt;rhino3dm._rhino3dm.Text object at 0x00000213A32339F0&gt;\n        4946  Attributes              :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213A32339F0&gt;\n        4946  Attributes.Id           :  09230350-7cef-453f-b45a-bf53ea14eb44\n        4946  Attributes.Name         :  \n        4946  Attributes.LayerIndex   :  2\n        4946  Attributes.ObjectColor  :  (0, 0, 0, 255)\n        4946  Attributes.Visible      :  True\n\n            Geometry.PlainText     :  1-1-2\n\ntotal num of text:  72"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#create-dataclass-mypt",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#create-dataclass-mypt",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "@dataclass\nclass OatPt:\n    idx  : int\n    point: rhino3dm.Point3d\n    name : str"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-pt",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-pt",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "# layer_idx_of_pt = 2\n# cnt_pt = 0\n# max_num_obj = 3\n# total_num_pt = 0\n#\n# oaPt_list_1 = []\n#\n# for idx, obj in enumerate(iter(object_table)):\n#     if (obj.Attributes.LayerIndex == layer_idx_of_pt) and (cnt_pt &lt; max_num_obj):\n#         print('object ', idx, ' Object                  : ', obj)\n#         print('       ', idx, ' Geometry                : ', obj.Geometry)\n#         print('       ', idx, ' Attributes              : ', obj.Attributes)\n#         print('       ', idx, ' Attributes.Id           : ', obj.Attributes.Id)\n#         print('       ', idx, ' Attributes.Name         : ', obj.Attributes.Name)\n#         print('       ', idx, ' Attributes.LayerIndex   : ', obj.Attributes.LayerIndex)\n#         print('       ', idx, ' Attributes.ObjectColor  : ', obj.Attributes.ObjectColor)\n#         print('       ', idx, ' Attributes.Visible      : ', obj.Attributes.Visible)\n#         print()\n#\n#         # if geom is Point, print its xyz\n#         if isinstance(obj.Geometry, rhino3dm.Point):\n#             pt = obj.Geometry.Location\n#             print('            Geometry.Location.X     : ', pt.X)\n#             print('            Geometry.Location.Y     : ', pt.Y)\n#             print('            Geometry.Location.Z     : ', pt.Z)\n#\n#             oatPt = OatPt(idx, pt, str(idx))\n#             oaPt_list_1.append(oatPt)\n#\n#             print()\n#\n# for idx, obj in enumerate(iter(object_table)):\n#     if (obj.Attributes.LayerIndex == layer_idx_of_pt):\n#         total_num_pt += 1\n#\n# print('total num of pt: ', total_num_pt)\n\n# for idx, oatPt in enumerate(oaPt_list_1):\n#     print('myPt', idx, ' : ', oatPt)\n#     print('    type of idx in myPt:', type(oatPt.idx))\n#     print('    type of point in myPt:', type(oatPt.point))\n#     print('    type of name in myPt:', type(oatPt.name))"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-textdot",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-textdot",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "max_num_obj = 3\ncnt_textDot = 0\ntotal_num_textDot = 0\n\nfor idx, obj in enumerate(iter(object_table)):\n    obj_geom = obj.Geometry\n    obj_attr = obj.Attributes\n\n    if (isinstance(obj_geom, rhino3dm.TextDot)) and (cnt_textDot &lt; max_num_obj):\n        print('textDot object ', idx, ' : ', obj_geom)\n        print('        position            : ', obj_geom.Point)\n        print('        text                : ', obj_geom.Text)\n        print('        Attributes object   : ', obj_attr)\n        print('        attribs.Id          : ', obj_attr.Id)\n        print('        attribs.Name        : ', obj_attr.Name)\n        print('        attribs.LayerIndex  : ', obj_attr.LayerIndex)\n        print('        attribs.ObjectColor : ', obj_attr.ObjectColor)\n        print('        attribs.Visible     : ', obj_attr.Visible)\n        print()\n\n        cnt_textDot += 1\n\nfor idx, obj in enumerate(iter(object_table)):\n    if isinstance(obj.Geometry, rhino3dm.TextDot):\n        total_num_textDot += 1\n\nprint('total num of textDot: ', total_num_textDot)\n\ntextDot object  4872  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x00000213A32310B0&gt;\n        position            :  27.064173777436537,200.67848337106952,0.0\n        text                :  6-6-1\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C50765F0&gt;\n        attribs.Id          :  ace09291-2363-4c79-a99d-2ae7be61531d\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntextDot object  4873  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x00000213C50761B0&gt;\n        position            :  35.21171531476992,205.36180830113673,0.0\n        text                :  1-1-1\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213A32310B0&gt;\n        attribs.Id          :  b7bc5562-82b9-4119-b8ef-aa9c68ce3dee\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntextDot object  4874  :  &lt;rhino3dm._rhino3dm.TextDot object at 0x00000213C5077C30&gt;\n        position            :  42.1912202855743,199.72217247117237,0.0\n        text                :  1-1-2\n        Attributes object   :  &lt;rhino3dm._rhino3dm.ObjectAttributes object at 0x00000213C50761B0&gt;\n        attribs.Id          :  65b8075f-ceac-48f6-9b96-6d021fe2ad2a\n        attribs.Name        :  \n        attribs.LayerIndex  :  3\n        attribs.ObjectColor :  (0, 0, 0, 255)\n        attribs.Visible     :  True\n\ntotal num of textDot:  72"
  },
  {
    "objectID": "docs/pages/rhino3dm/rhino3dm_02.html#read-earthanchorpoint",
    "href": "docs/pages/rhino3dm/rhino3dm_02.html#read-earthanchorpoint",
    "title": "rhino3dm exercise 02",
    "section": "",
    "text": "# get the `Settings` object as a property of File3dm object\nfile3dm_settings = file3dm_obj.Settings \nprint('file3dm settings: ', file3dm_settings)\n\n# get `EarthAnchorPoint` in settings\nearthAnchorPoint = file3dm_settings.EarthAnchorPoint\nprint('EarthAnchorPoint: ', earthAnchorPoint)\nprint()\n\n# check if the earthAnchorPoint is set or not\nearthAnchorPoint_set_or_not = earthAnchorPoint.EarthLocationIsSet()\nprint('earthAnchorPoint is set: ', earthAnchorPoint_set_or_not)\n\n# get lat and lon of earthAnchorPoint\nearthAnchorPoint_lat = earthAnchorPoint.EarthBasepointLatitude\nearthAnchorPoint_lon = earthAnchorPoint.EarthBasepointLongitude\nprint('earthAnchorPoint latitude : ', earthAnchorPoint_lat)\nprint('earthAnchorPoint longitude: ', earthAnchorPoint_lon)\nprint()\n\n# get ModelBasePoint\nmodelBasePoint = earthAnchorPoint.ModelBasePoint\nprint('model base point: ', modelBasePoint)\n\n# get `ModelToEarthTransform`\nmodelUnitSystem = file3dm_settings.ModelUnitSystem\nprint('modelUnitSystem : ', modelUnitSystem)\n\nmodelToEarthTransform = earthAnchorPoint.GetModelToEarthTransform(modelUnitSystem)\nprint('modelToEarthTransform : ', modelToEarthTransform)\n\n# create a test pt\n# test_pt = rhino3dm.Point3d(91.2724, 187.784, 0)\ntest_pt = rhino3dm.Point3d(140.492,236.638,0)\ntest_pt_transformed_in_lon_lat_ele = test_pt.Transform(modelToEarthTransform)\nprint('test pt transformed in lon, lat, ele: ', test_pt_transformed_in_lon_lat_ele)\n\nfile3dm settings:  &lt;rhino3dm._rhino3dm.File3dmSettings object at 0x00000213C4FD6C30&gt;\nEarthAnchorPoint:  &lt;rhino3dm._rhino3dm.EarthAnchorPoint object at 0x00000213C5004870&gt;\n\nearthAnchorPoint is set:  True\nearthAnchorPoint latitude :  22.716611\nearthAnchorPoint longitude:  120.534701\n\nmodel base point:  1.887214762712837,254.12517650890035,0.0\nmodelUnitSystem :  UnitSystem.Meters\nmodelToEarthTransform :  &lt;rhino3dm._rhino3dm.Transform object at 0x00000213C4FD9970&gt;\ntest pt transformed in lon, lat, ele:  120.53605149715442,22.716453831047513,0.0\n\n\n\nFile3dm.Settings\nproperty rhino3dm.File3dm.Settings\n\nFile3dmSettings: Settings include tolerance, and unit system, and defaults used for creating views and objects.\n\nReturn: A rhino3dm.File3dm.Settings object\n\n\nrhino3dm.File3dmSettings\nclass rhino3dm.File3dm\n\nProperty:\n\nModelBasePoint\nEarthAnchorPoint\nModelUnitSystem\n\n\n\nrhino3dm.EarthAnchorPoint\nclass rhino3dm.EarthAnchorPoint\nProperty:\n\nEarthBasepointLatitude\nEarthBasepointLongitude\nModelBasePoint\nGetModelToEarthTransform(modelUnitSystem)\n\n\n\nSet EarthAnchorPoint in Rhino\ncmd Set EarthAnchorPoint in Rhino\n\n\nRhino to Google Earth\nwiki Rhino to Google Earth"
  },
  {
    "objectID": "pages/plotly/multiline_annotation.html",
    "href": "pages/plotly/multiline_annotation.html",
    "title": "Add Multiline Annotation",
    "section": "",
    "text": "1 Use the &lt;br&gt; tag\nUse the html tag &lt;br&gt; to break a line after the string section in the text property of an annotation.\n\nimport plotly.graph_objects as go\n\nlabels = ['Oxygen','Hydrogen','Carbon_Dioxide','Nitrogen']\nvalues = [45.00, 25.00, 10.53, 5.00]\n\n# Use `hole` to create a donut-like pie chart\nfig = go.Figure(data=[go.Pie(\n    labels=labels,\n    values=values,\n    hole=.3,\n    textinfo='label+value+percent',\n)])\n\nfig.add_annotation(\n    x=0.5,\n    y=0.5,\n    text='total values:&lt;br&gt;' + f'{round(sum(values),2):,}',\n    font=dict(size=16, weight='bold'),\n    showarrow=False,\n)\n\nfig.update_layout(height=600)\n\nfig.show()\n\n                                                \n\n\n\n\n\n\n\n\nRef: How to add multi-line annotation at the center of a donut chart?\n\n\n Back to top",
    "crumbs": [
      "Home",
      "Plotly",
      "Add Multiline Annotation"
    ]
  }
]